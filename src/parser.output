Terminals unused in grammar

    "match"
    "mod"
    "type"
    "with"
    T_CONSTRUCTOR_ID
    "**"


State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: letdef_list

    2 letdef_list: %empty
    3            | letdef_list letdef

    4 letdef: "let" "rec" def def_list
    5       | "let" def def_list

    6 def_list: %empty
    7         | def_list "and" def

    8 def: T_ID par_list ':' type '=' expr
    9    | T_ID par_list '=' expr
   10    | "mutable" T_ID
   11    | "mutable" T_ID '[' expr expr_comma_list ']'
   12    | "mutable" T_ID '[' expr expr_comma_list ']' ':' type

   13 par_list: %empty
   14         | par_list par

   15 par: T_ID
   16    | '(' T_ID ':' type ')'

   17 expr_comma_list: %empty
   18                | expr_comma_list ',' expr

   19 expr: T_CONST_INT
   20     | T_CONST_CHAR
   21     | T_STRING_LITERAL
   22     | "true"
   23     | "false"
   24     | '(' ')'
   25     | '(' expr ')'
   26     | T_ID expr_list
   27     | T_ID '[' expr expr_comma_list ']'
   28     | "dim" T_ID
   29     | "dim" T_CONST_INT T_ID
   30     | "new" type
   31     | "delete" expr
   32     | letdef "in" expr
   33     | "begin" expr "end"
   34     | "if" expr "then" expr
   35     | "if" expr "then" expr "else" expr
   36     | "while" expr "do" expr "done"
   37     | "for" T_ID '=' expr "to" expr "do" expr "done"
   38     | "for" T_ID '=' expr "downto" expr "do" expr "done"
   39     | '+' expr
   40     | '-' expr
   41     | '!' expr
   42     | "not" expr
   43     | expr '+' expr
   44     | expr '-' expr
   45     | expr '*' expr
   46     | expr '/' expr
   47     | expr '=' expr
   48     | expr "<>" expr
   49     | expr '<' expr
   50     | expr '>' expr
   51     | expr "<=" expr
   52     | expr ">=" expr
   53     | expr "==" expr
   54     | expr "!=" expr
   55     | expr "&&" expr
   56     | expr "||" expr
   57     | expr ';' expr
   58     | expr ":=" expr

   59 expr_list: %empty
   60          | expr_list expr

   61 type: "unit"
   62     | "int"
   63     | "char"
   64     | "bool"
   65     | '(' type ')'
   66     | type "->" type
   67     | type "ref"
   68     | "array" "of" type
   69     | "array" '[' '*' asterisk_list ']' "of" type

   70 asterisk_list: %empty
   71              | asterisk_list ',' '*'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 41
    '(' (40) 16 24 25 65
    ')' (41) 16 24 25 65
    '*' (42) 45 69 71
    '+' (43) 39 43
    ',' (44) 18 71
    '-' (45) 40 44
    '/' (47) 46
    ':' (58) 8 12 16
    ';' (59) 57
    '<' (60) 49
    '=' (61) 8 9 37 38 47
    '>' (62) 50
    '[' (91) 11 12 27 69
    ']' (93) 11 12 27 69
    error (256)
    "and" (258) 7
    "array" (259) 68 69
    "begin" (260) 33
    "bool" (261) 64
    "char" (262) 63
    "delete" (263) 31
    "dim" (264) 28 29
    "do" (265) 36 37 38
    "done" (266) 36 37 38
    "downto" (267) 38
    "else" (268) 35
    "end" (269) 33
    "false" (270) 23
    "for" (271) 37 38
    "if" (272) 34 35
    "in" (273) 32
    "int" (274) 62
    "let" (275) 4 5
    "match" (276)
    "mod" (277)
    "mutable" (278) 10 11 12
    "new" (279) 30
    "not" (280) 42
    "of" (281) 68 69
    "rec" (282) 4
    "ref" (283) 67
    "then" (284) 34 35
    "to" (285) 37
    "true" (286) 22
    "type" (287)
    "unit" (288) 61
    "while" (289) 36
    "with" (290)
    "->" (291) 66
    "&&" (292) 55
    "||" (293) 56
    "<>" (294) 48
    "<=" (295) 51
    ">=" (296) 52
    "==" (297) 53
    "!=" (298) 54
    ":=" (299) 58
    T_ID <id> (300) 8 9 10 11 12 15 16 26 27 28 29 37 38
    T_CONSTRUCTOR_ID (301)
    T_CONST_CHAR <const_char> (302) 20
    T_CONST_INT <number> (303) 19 29
    T_STRING_LITERAL <string_literal> (304) 21
    EXPR_LIST (305)
    LOCAL_DEFS (306)
    IF_THEN (307)
    IF_THEN_ELSE (308)
    "**" (309)
    UNOP (310)
    FUNCTION_CALL (311)
    ARRAY_INDEX (312)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    program <block> (74)
        on left: 1
        on right: 0
    letdef_list <block> (75)
        on left: 2 3
        on right: 1 3
    letdef <let_def> (76)
        on left: 4 5
        on right: 3 32
    def_list <block> (77)
        on left: 6 7
        on right: 4 5 7
    def <def> (78)
        on left: 8 9 10 11 12
        on right: 4 5 7
    par_list <block> (79)
        on left: 13 14
        on right: 8 9 14
    par <par> (80)
        on left: 15 16
        on right: 14
    expr_comma_list <block> (81)
        on left: 17 18
        on right: 11 12 18 27
    expr <expr> (82)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 8 9 11 12 18 25 27 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60
    expr_list <block> (83)
        on left: 59 60
        on right: 26 60
    type <type> (84)
        on left: 61 62 63 64 65 66 67 68 69
        on right: 8 12 16 30 65 66 67 68 69
    asterisk_list <block> (85)
        on left: 70 71
        on right: 69 71


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (letdef_list)

    program      go to state 1
    letdef_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: letdef_list .
    3 letdef_list: letdef_list . letdef

    "let"  shift, and go to state 4

    $default  reduce using rule 1 (program)

    letdef  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 letdef: "let" . "rec" def def_list
    5       | "let" . def def_list

    "mutable"  shift, and go to state 6
    "rec"      shift, and go to state 7
    T_ID       shift, and go to state 8

    def  go to state 9


State 5

    3 letdef_list: letdef_list letdef .

    $default  reduce using rule 3 (letdef_list)


State 6

   10 def: "mutable" . T_ID
   11    | "mutable" . T_ID '[' expr expr_comma_list ']'
   12    | "mutable" . T_ID '[' expr expr_comma_list ']' ':' type

    T_ID  shift, and go to state 10


State 7

    4 letdef: "let" "rec" . def def_list

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 11


State 8

    8 def: T_ID . par_list ':' type '=' expr
    9    | T_ID . par_list '=' expr

    $default  reduce using rule 13 (par_list)

    par_list  go to state 12


State 9

    5 letdef: "let" def . def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 13


State 10

   10 def: "mutable" T_ID .
   11    | "mutable" T_ID . '[' expr expr_comma_list ']'
   12    | "mutable" T_ID . '[' expr expr_comma_list ']' ':' type

    '['  shift, and go to state 14

    $default  reduce using rule 10 (def)


State 11

    4 letdef: "let" "rec" def . def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 15


State 12

    8 def: T_ID par_list . ':' type '=' expr
    9    | T_ID par_list . '=' expr
   14 par_list: par_list . par

    T_ID  shift, and go to state 16
    '='   shift, and go to state 17
    '('   shift, and go to state 18
    ':'   shift, and go to state 19

    par  go to state 20


State 13

    5 letdef: "let" def def_list .
    7 def_list: def_list . "and" def

    "and"  shift, and go to state 21

    $default  reduce using rule 5 (letdef)


State 14

   11 def: "mutable" T_ID '[' . expr expr_comma_list ']'
   12    | "mutable" T_ID '[' . expr expr_comma_list ']' ':' type

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 41


State 15

    4 letdef: "let" "rec" def def_list .
    7 def_list: def_list . "and" def

    "and"  shift, and go to state 21

    $default  reduce using rule 4 (letdef)


State 16

   15 par: T_ID .

    $default  reduce using rule 15 (par)


State 17

    9 def: T_ID par_list '=' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 42


State 18

   16 par: '(' . T_ID ':' type ')'

    T_ID  shift, and go to state 43


State 19

    8 def: T_ID par_list ':' . type '=' expr

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 50


State 20

   14 par_list: par_list par .

    $default  reduce using rule 14 (par_list)


State 21

    7 def_list: def_list "and" . def

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 51


State 22

   33 expr: "begin" . expr "end"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 52


State 23

   31 expr: "delete" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 53


State 24

   28 expr: "dim" . T_ID
   29     | "dim" . T_CONST_INT T_ID

    T_ID         shift, and go to state 54
    T_CONST_INT  shift, and go to state 55


State 25

   23 expr: "false" .

    $default  reduce using rule 23 (expr)


State 26

   37 expr: "for" . T_ID '=' expr "to" expr "do" expr "done"
   38     | "for" . T_ID '=' expr "downto" expr "do" expr "done"

    T_ID  shift, and go to state 56


State 27

   34 expr: "if" . expr "then" expr
   35     | "if" . expr "then" expr "else" expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 57


State 28

   30 expr: "new" . type

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 58


State 29

   42 expr: "not" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 59


State 30

   22 expr: "true" .

    $default  reduce using rule 22 (expr)


State 31

   36 expr: "while" . expr "do" expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 60


State 32

   26 expr: T_ID . expr_list
   27     | T_ID . '[' expr expr_comma_list ']'

    '['  shift, and go to state 61

    $default  reduce using rule 59 (expr_list)

    expr_list  go to state 62


State 33

   20 expr: T_CONST_CHAR .

    $default  reduce using rule 20 (expr)


State 34

   19 expr: T_CONST_INT .

    $default  reduce using rule 19 (expr)


State 35

   21 expr: T_STRING_LITERAL .

    $default  reduce using rule 21 (expr)


State 36

   39 expr: '+' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 63


State 37

   40 expr: '-' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 64


State 38

   24 expr: '(' . ')'
   25     | '(' . expr ')'

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39
    ')'               shift, and go to state 65

    letdef  go to state 40
    expr    go to state 66


State 39

   41 expr: '!' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 67


State 40

   32 expr: letdef . "in" expr

    "in"  shift, and go to state 68


State 41

   11 def: "mutable" T_ID '[' expr . expr_comma_list ']'
   12    | "mutable" T_ID '[' expr . expr_comma_list ']' ':' type
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 17 (expr_comma_list)

    expr_comma_list  go to state 85


State 42

    9 def: T_ID par_list '=' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 9 (def)


State 43

   16 par: '(' T_ID . ':' type ')'

    ':'  shift, and go to state 86


State 44

   68 type: "array" . "of" type
   69     | "array" . '[' '*' asterisk_list ']' "of" type

    "of"  shift, and go to state 87
    '['   shift, and go to state 88


State 45

   64 type: "bool" .

    $default  reduce using rule 64 (type)


State 46

   63 type: "char" .

    $default  reduce using rule 63 (type)


State 47

   62 type: "int" .

    $default  reduce using rule 62 (type)


State 48

   61 type: "unit" .

    $default  reduce using rule 61 (type)


State 49

   65 type: '(' . type ')'

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 89


State 50

    8 def: T_ID par_list ':' type . '=' expr
   66 type: type . "->" type
   67     | type . "ref"

    "ref"  shift, and go to state 90
    "->"   shift, and go to state 91
    '='    shift, and go to state 92


State 51

    7 def_list: def_list "and" def .

    $default  reduce using rule 7 (def_list)


State 52

   33 expr: "begin" expr . "end"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "end"  shift, and go to state 93
    "&&"   shift, and go to state 69
    "||"   shift, and go to state 70
    "<>"   shift, and go to state 71
    "<="   shift, and go to state 72
    ">="   shift, and go to state 73
    "=="   shift, and go to state 74
    "!="   shift, and go to state 75
    ":="   shift, and go to state 76
    ';'    shift, and go to state 77
    '='    shift, and go to state 78
    '>'    shift, and go to state 79
    '<'    shift, and go to state 80
    '+'    shift, and go to state 81
    '-'    shift, and go to state 82
    '*'    shift, and go to state 83
    '/'    shift, and go to state 84


State 53

   31 expr: "delete" expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 31 (expr)


State 54

   28 expr: "dim" T_ID .

    $default  reduce using rule 28 (expr)


State 55

   29 expr: "dim" T_CONST_INT . T_ID

    T_ID  shift, and go to state 94


State 56

   37 expr: "for" T_ID . '=' expr "to" expr "do" expr "done"
   38     | "for" T_ID . '=' expr "downto" expr "do" expr "done"

    '='  shift, and go to state 95


State 57

   34 expr: "if" expr . "then" expr
   35     | "if" expr . "then" expr "else" expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "then"  shift, and go to state 96
    "&&"    shift, and go to state 69
    "||"    shift, and go to state 70
    "<>"    shift, and go to state 71
    "<="    shift, and go to state 72
    ">="    shift, and go to state 73
    "=="    shift, and go to state 74
    "!="    shift, and go to state 75
    ":="    shift, and go to state 76
    ';'     shift, and go to state 77
    '='     shift, and go to state 78
    '>'     shift, and go to state 79
    '<'     shift, and go to state 80
    '+'     shift, and go to state 81
    '-'     shift, and go to state 82
    '*'     shift, and go to state 83
    '/'     shift, and go to state 84


State 58

   30 expr: "new" type .
   66 type: type . "->" type
   67     | type . "ref"

    "ref"  shift, and go to state 90
    "->"   shift, and go to state 91

    $default  reduce using rule 30 (expr)


State 59

   42 expr: "not" expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 42 (expr)


State 60

   36 expr: "while" expr . "do" expr "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "do"  shift, and go to state 97
    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84


State 61

   27 expr: T_ID '[' . expr expr_comma_list ']'

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 98


State 62

   26 expr: T_ID expr_list .
   60 expr_list: expr_list . expr

    "begin"           shift, and go to state 22
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    $default  reduce using rule 26 (expr)

    letdef  go to state 40
    expr    go to state 99


State 63

   39 expr: '+' expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 39 (expr)


State 64

   40 expr: '-' expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 40 (expr)


State 65

   24 expr: '(' ')' .

    $default  reduce using rule 24 (expr)


State 66

   25 expr: '(' expr . ')'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84
    ')'   shift, and go to state 100


State 67

   41 expr: '!' expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 41 (expr)


State 68

   32 expr: letdef "in" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 101


State 69

   55 expr: expr "&&" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 102


State 70

   56 expr: expr "||" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 103


State 71

   48 expr: expr "<>" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 104


State 72

   51 expr: expr "<=" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 105


State 73

   52 expr: expr ">=" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 106


State 74

   53 expr: expr "==" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 107


State 75

   54 expr: expr "!=" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 108


State 76

   58 expr: expr ":=" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 109


State 77

   57 expr: expr ';' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 110


State 78

   47 expr: expr '=' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 111


State 79

   50 expr: expr '>' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 112


State 80

   49 expr: expr '<' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 113


State 81

   43 expr: expr '+' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 114


State 82

   44 expr: expr '-' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 115


State 83

   45 expr: expr '*' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 116


State 84

   46 expr: expr '/' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 117


State 85

   11 def: "mutable" T_ID '[' expr expr_comma_list . ']'
   12    | "mutable" T_ID '[' expr expr_comma_list . ']' ':' type
   18 expr_comma_list: expr_comma_list . ',' expr

    ']'  shift, and go to state 118
    ','  shift, and go to state 119


State 86

   16 par: '(' T_ID ':' . type ')'

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 120


State 87

   68 type: "array" "of" . type

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 121


State 88

   69 type: "array" '[' . '*' asterisk_list ']' "of" type

    '*'  shift, and go to state 122


State 89

   65 type: '(' type . ')'
   66     | type . "->" type
   67     | type . "ref"

    "ref"  shift, and go to state 90
    "->"   shift, and go to state 91
    ')'    shift, and go to state 123


State 90

   67 type: type "ref" .

    $default  reduce using rule 67 (type)


State 91

   66 type: type "->" . type

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 124


State 92

    8 def: T_ID par_list ':' type '=' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 125


State 93

   33 expr: "begin" expr "end" .

    $default  reduce using rule 33 (expr)


State 94

   29 expr: "dim" T_CONST_INT T_ID .

    $default  reduce using rule 29 (expr)


State 95

   37 expr: "for" T_ID '=' . expr "to" expr "do" expr "done"
   38     | "for" T_ID '=' . expr "downto" expr "do" expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 126


State 96

   34 expr: "if" expr "then" . expr
   35     | "if" expr "then" . expr "else" expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 127


State 97

   36 expr: "while" expr "do" . expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 128


State 98

   27 expr: T_ID '[' expr . expr_comma_list ']'
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 17 (expr_comma_list)

    expr_comma_list  go to state 129


State 99

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr
   60 expr_list: expr_list expr .

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 60 (expr_list)


State 100

   25 expr: '(' expr ')' .

    $default  reduce using rule 25 (expr)


State 101

   32 expr: letdef "in" expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 32 (expr)


State 102

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   55     | expr "&&" expr .
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 55 (expr)


State 103

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   56     | expr "||" expr .
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 56 (expr)


State 104

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   48     | expr "<>" expr .
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 48 (expr)


State 105

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   51     | expr "<=" expr .
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 51 (expr)


State 106

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   52     | expr ">=" expr .
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 52 (expr)


State 107

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   53     | expr "==" expr .
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 53 (expr)


State 108

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   54     | expr "!=" expr .
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 54 (expr)


State 109

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr
   58     | expr ":=" expr .

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    ":="  error (nonassociative)

    $default  reduce using rule 58 (expr)


State 110

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   57     | expr ';' expr .
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 57 (expr)


State 111

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   47     | expr '=' expr .
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 47 (expr)


State 112

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   50     | expr '>' expr .
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 50 (expr)


State 113

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   49     | expr '<' expr .
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 49 (expr)


State 114

   43 expr: expr . '+' expr
   43     | expr '+' expr .
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    $default  reduce using rule 43 (expr)


State 115

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   44     | expr '-' expr .
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84

    $default  reduce using rule 44 (expr)


State 116

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   45     | expr '*' expr .
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 45 (expr)


State 117

   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   46     | expr '/' expr .
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    $default  reduce using rule 46 (expr)


State 118

   11 def: "mutable" T_ID '[' expr expr_comma_list ']' .
   12    | "mutable" T_ID '[' expr expr_comma_list ']' . ':' type

    ':'  shift, and go to state 130

    $default  reduce using rule 11 (def)


State 119

   18 expr_comma_list: expr_comma_list ',' . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 131


State 120

   16 par: '(' T_ID ':' type . ')'
   66 type: type . "->" type
   67     | type . "ref"

    "ref"  shift, and go to state 90
    "->"   shift, and go to state 91
    ')'    shift, and go to state 132


State 121

   66 type: type . "->" type
   67     | type . "ref"
   68     | "array" "of" type .

    $default  reduce using rule 68 (type)


State 122

   69 type: "array" '[' '*' . asterisk_list ']' "of" type

    $default  reduce using rule 70 (asterisk_list)

    asterisk_list  go to state 133


State 123

   65 type: '(' type ')' .

    $default  reduce using rule 65 (type)


State 124

   66 type: type . "->" type
   66     | type "->" type .
   67     | type . "ref"

    "ref"  shift, and go to state 90
    "->"   shift, and go to state 91

    $default  reduce using rule 66 (type)


State 125

    8 def: T_ID par_list ':' type '=' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 8 (def)


State 126

   37 expr: "for" T_ID '=' expr . "to" expr "do" expr "done"
   38     | "for" T_ID '=' expr . "downto" expr "do" expr "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "downto"  shift, and go to state 134
    "to"      shift, and go to state 135
    "&&"      shift, and go to state 69
    "||"      shift, and go to state 70
    "<>"      shift, and go to state 71
    "<="      shift, and go to state 72
    ">="      shift, and go to state 73
    "=="      shift, and go to state 74
    "!="      shift, and go to state 75
    ":="      shift, and go to state 76
    ';'       shift, and go to state 77
    '='       shift, and go to state 78
    '>'       shift, and go to state 79
    '<'       shift, and go to state 80
    '+'       shift, and go to state 81
    '-'       shift, and go to state 82
    '*'       shift, and go to state 83
    '/'       shift, and go to state 84


State 127

   34 expr: "if" expr "then" expr .
   35     | "if" expr "then" expr . "else" expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "else"  shift, and go to state 136
    "&&"    shift, and go to state 69
    "||"    shift, and go to state 70
    "<>"    shift, and go to state 71
    "<="    shift, and go to state 72
    ">="    shift, and go to state 73
    "=="    shift, and go to state 74
    "!="    shift, and go to state 75
    ":="    shift, and go to state 76
    '='     shift, and go to state 78
    '>'     shift, and go to state 79
    '<'     shift, and go to state 80
    '+'     shift, and go to state 81
    '-'     shift, and go to state 82
    '*'     shift, and go to state 83
    '/'     shift, and go to state 84

    "else"    [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 128

   36 expr: "while" expr "do" expr . "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "done"  shift, and go to state 137
    "&&"    shift, and go to state 69
    "||"    shift, and go to state 70
    "<>"    shift, and go to state 71
    "<="    shift, and go to state 72
    ">="    shift, and go to state 73
    "=="    shift, and go to state 74
    "!="    shift, and go to state 75
    ":="    shift, and go to state 76
    ';'     shift, and go to state 77
    '='     shift, and go to state 78
    '>'     shift, and go to state 79
    '<'     shift, and go to state 80
    '+'     shift, and go to state 81
    '-'     shift, and go to state 82
    '*'     shift, and go to state 83
    '/'     shift, and go to state 84


State 129

   18 expr_comma_list: expr_comma_list . ',' expr
   27 expr: T_ID '[' expr expr_comma_list . ']'

    ']'  shift, and go to state 138
    ','  shift, and go to state 119


State 130

   12 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' . type

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 139


State 131

   18 expr_comma_list: expr_comma_list ',' expr .
   43 expr: expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 18 (expr_comma_list)


State 132

   16 par: '(' T_ID ':' type ')' .

    $default  reduce using rule 16 (par)


State 133

   69 type: "array" '[' '*' asterisk_list . ']' "of" type
   71 asterisk_list: asterisk_list . ',' '*'

    ']'  shift, and go to state 140
    ','  shift, and go to state 141


State 134

   38 expr: "for" T_ID '=' expr "downto" . expr "do" expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 142


State 135

   37 expr: "for" T_ID '=' expr "to" . expr "do" expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 143


State 136

   35 expr: "if" expr "then" expr "else" . expr

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 144


State 137

   36 expr: "while" expr "do" expr "done" .

    $default  reduce using rule 36 (expr)


State 138

   27 expr: T_ID '[' expr expr_comma_list ']' .

    $default  reduce using rule 27 (expr)


State 139

   12 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' type .
   66 type: type . "->" type
   67     | type . "ref"

    "ref"  shift, and go to state 90
    "->"   shift, and go to state 91

    $default  reduce using rule 12 (def)


State 140

   69 type: "array" '[' '*' asterisk_list ']' . "of" type

    "of"  shift, and go to state 145


State 141

   71 asterisk_list: asterisk_list ',' . '*'

    '*'  shift, and go to state 146


State 142

   38 expr: "for" T_ID '=' expr "downto" expr . "do" expr "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "do"  shift, and go to state 147
    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84


State 143

   37 expr: "for" T_ID '=' expr "to" expr . "do" expr "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "do"  shift, and go to state 148
    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    ';'   shift, and go to state 77
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84


State 144

   35 expr: "if" expr "then" expr "else" expr .
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "&&"  shift, and go to state 69
    "||"  shift, and go to state 70
    "<>"  shift, and go to state 71
    "<="  shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74
    "!="  shift, and go to state 75
    ":="  shift, and go to state 76
    '='   shift, and go to state 78
    '>'   shift, and go to state 79
    '<'   shift, and go to state 80
    '+'   shift, and go to state 81
    '-'   shift, and go to state 82
    '*'   shift, and go to state 83
    '/'   shift, and go to state 84

    $default  reduce using rule 35 (expr)


State 145

   69 type: "array" '[' '*' asterisk_list ']' "of" . type

    "array"  shift, and go to state 44
    "bool"   shift, and go to state 45
    "char"   shift, and go to state 46
    "int"    shift, and go to state 47
    "unit"   shift, and go to state 48
    '('      shift, and go to state 49

    type  go to state 149


State 146

   71 asterisk_list: asterisk_list ',' '*' .

    $default  reduce using rule 71 (asterisk_list)


State 147

   38 expr: "for" T_ID '=' expr "downto" expr "do" . expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 150


State 148

   37 expr: "for" T_ID '=' expr "to" expr "do" . expr "done"

    "begin"           shift, and go to state 22
    "delete"          shift, and go to state 23
    "dim"             shift, and go to state 24
    "false"           shift, and go to state 25
    "for"             shift, and go to state 26
    "if"              shift, and go to state 27
    "let"             shift, and go to state 4
    "new"             shift, and go to state 28
    "not"             shift, and go to state 29
    "true"            shift, and go to state 30
    "while"           shift, and go to state 31
    T_ID              shift, and go to state 32
    T_CONST_CHAR      shift, and go to state 33
    T_CONST_INT       shift, and go to state 34
    T_STRING_LITERAL  shift, and go to state 35
    '+'               shift, and go to state 36
    '-'               shift, and go to state 37
    '('               shift, and go to state 38
    '!'               shift, and go to state 39

    letdef  go to state 40
    expr    go to state 151


State 149

   66 type: type . "->" type
   67     | type . "ref"
   69     | "array" '[' '*' asterisk_list ']' "of" type .

    $default  reduce using rule 69 (type)


State 150

   38 expr: "for" T_ID '=' expr "downto" expr "do" expr . "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "done"  shift, and go to state 152
    "&&"    shift, and go to state 69
    "||"    shift, and go to state 70
    "<>"    shift, and go to state 71
    "<="    shift, and go to state 72
    ">="    shift, and go to state 73
    "=="    shift, and go to state 74
    "!="    shift, and go to state 75
    ":="    shift, and go to state 76
    ';'     shift, and go to state 77
    '='     shift, and go to state 78
    '>'     shift, and go to state 79
    '<'     shift, and go to state 80
    '+'     shift, and go to state 81
    '-'     shift, and go to state 82
    '*'     shift, and go to state 83
    '/'     shift, and go to state 84


State 151

   37 expr: "for" T_ID '=' expr "to" expr "do" expr . "done"
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '=' expr
   48     | expr . "<>" expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | expr . "<=" expr
   52     | expr . ">=" expr
   53     | expr . "==" expr
   54     | expr . "!=" expr
   55     | expr . "&&" expr
   56     | expr . "||" expr
   57     | expr . ';' expr
   58     | expr . ":=" expr

    "done"  shift, and go to state 153
    "&&"    shift, and go to state 69
    "||"    shift, and go to state 70
    "<>"    shift, and go to state 71
    "<="    shift, and go to state 72
    ">="    shift, and go to state 73
    "=="    shift, and go to state 74
    "!="    shift, and go to state 75
    ":="    shift, and go to state 76
    ';'     shift, and go to state 77
    '='     shift, and go to state 78
    '>'     shift, and go to state 79
    '<'     shift, and go to state 80
    '+'     shift, and go to state 81
    '-'     shift, and go to state 82
    '*'     shift, and go to state 83
    '/'     shift, and go to state 84


State 152

   38 expr: "for" T_ID '=' expr "downto" expr "do" expr "done" .

    $default  reduce using rule 38 (expr)


State 153

   37 expr: "for" T_ID '=' expr "to" expr "do" expr "done" .

    $default  reduce using rule 37 (expr)
