Terminals unused in grammar

    "match"
    "type"
    "with"
    T_CONSTRUCTOR_ID


State 155 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: letdef_list

    2 letdef_list: %empty
    3            | letdef_list letdef

    4 letdef: "let" "rec" def def_list
    5       | "let" def def_list

    6 def_list: %empty
    7         | def_list "and" def

    8 def: T_ID '=' expr
    9    | T_ID ':' type '=' expr
   10    | T_ID par par_list ':' type '=' expr
   11    | T_ID par par_list '=' expr
   12    | "mutable" T_ID
   13    | "mutable" T_ID ':' type
   14    | "mutable" T_ID '[' expr expr_comma_list ']'
   15    | "mutable" T_ID '[' expr expr_comma_list ']' ':' type

   16 par_list: %empty
   17         | par_list par

   18 par: T_ID
   19    | '(' T_ID ':' type ')'

   20 expr_comma_list: %empty
   21                | expr_comma_list ',' expr

   22 expr: func_expr
   23     | T_ID func_expr func_expr_list
   24     | "dim" T_ID
   25     | "dim" T_CONST_INT T_ID
   26     | "new" type
   27     | "delete" expr
   28     | letdef "in" expr
   29     | "begin" expr "end"
   30     | "if" expr "then" expr
   31     | "if" expr "then" expr "else" expr
   32     | "while" expr "do" expr "done"
   33     | "for" T_ID '=' expr "to" expr "do" expr "done"
   34     | "for" T_ID '=' expr "downto" expr "do" expr "done"
   35     | '+' expr
   36     | '-' expr
   37     | "+." expr
   38     | "-." expr
   39     | "not" expr
   40     | expr '+' expr
   41     | expr '-' expr
   42     | expr '*' expr
   43     | expr '/' expr
   44     | expr "+." expr
   45     | expr "-." expr
   46     | expr "*." expr
   47     | expr "/." expr
   48     | expr "**" expr
   49     | expr '=' expr
   50     | expr "<>" expr
   51     | expr '<' expr
   52     | expr '>' expr
   53     | expr "<=" expr
   54     | expr ">=" expr
   55     | expr "==" expr
   56     | expr "!=" expr
   57     | expr "&&" expr
   58     | expr "||" expr
   59     | expr ';' expr
   60     | expr ":=" expr
   61     | expr "mod" expr

   62 func_expr: '!' func_expr
   63          | '(' expr ')'
   64          | '(' ')'
   65          | T_ID
   66          | T_CONST_INT
   67          | T_CONST_FLOAT
   68          | T_CONST_CHAR
   69          | T_STRING_LITERAL
   70          | "true"
   71          | "false"
   72          | T_ID '[' expr expr_comma_list ']'

   73 func_expr_list: %empty
   74               | func_expr_list func_expr

   75 type: "unit"
   76     | "int"
   77     | "char"
   78     | "bool"
   79     | "float"
   80     | '(' type ')'
   81     | type "->" type
   82     | type "ref"
   83     | "array" "of" type
   84     | "array" '[' asterisk_list ']' "of" type

   85 asterisk_list: '*'
   86              | asterisk_list ',' '*'


Terminals, with rules where they appear

    $end (0) 0
    '!' <op> (33) 62
    '(' (40) 19 63 64 80
    ')' (41) 19 63 64 80
    '*' <op> (42) 42 85 86
    '+' <op> (43) 35 40
    ',' (44) 21 86
    '-' <op> (45) 36 41
    '/' <op> (47) 43
    ':' (58) 9 10 13 15 19
    ';' <op> (59) 59
    '<' <op> (60) 51
    '=' <op> (61) 8 9 10 11 33 34 49
    '>' <op> (62) 52
    '[' (91) 14 15 72 84
    ']' (93) 14 15 72 84
    error (256)
    "and" (258) 7
    "array" (259) 83 84
    "begin" (260) 29
    "bool" (261) 78
    "char" (262) 77
    "delete" <op> (263) 27
    "dim" (264) 24 25
    "do" (265) 32 33 34
    "done" (266) 32 33 34
    "downto" (267) 34
    "else" (268) 31
    "end" (269) 29
    "false" (270) 71
    "for" (271) 33 34
    "if" (272) 30 31
    "in" (273) 28
    "int" (274) 76
    "float" (275) 79
    "let" (276) 4 5
    "match" (277)
    "mod" <op> (278) 61
    "mutable" (279) 12 13 14 15
    "new" (280) 26
    "not" <op> (281) 39
    "of" (282) 83 84
    "rec" (283) 4
    "ref" (284) 82
    "then" (285) 30 31
    "to" (286) 33
    "true" (287) 70
    "type" (288)
    "unit" (289) 75
    "while" (290) 32
    "with" (291)
    "->" (292) 81
    "&&" <op> (293) 57
    "||" <op> (294) 58
    "<>" <op> (295) 50
    "<=" <op> (296) 53
    ">=" <op> (297) 54
    "==" <op> (298) 55
    "!=" <op> (299) 56
    ":=" <op> (300) 60
    "+." <op> (301) 37 44
    "-." <op> (302) 38 45
    "*." <op> (303) 46
    "/." <op> (304) 47
    "**" <op> (305) 48
    T_ID <id> (306) 8 9 10 11 12 13 14 15 18 19 23 24 25 33 34 65 72
    T_CONSTRUCTOR_ID (307)
    T_CONST_CHAR <const_char> (308) 68
    T_CONST_INT <number> (309) 25 66
    T_CONST_FLOAT <float_value> (310) 67
    T_STRING_LITERAL <string_literal> (311) 69
    IF_THEN (312)
    IF_THEN_ELSE (313)
    UNOP <op> (314)


Nonterminals, with rules where they appear

    $accept (75)
        on left: 0
    program <letdef_list> (76)
        on left: 1
        on right: 0
    letdef_list <letdef_list> (77)
        on left: 2 3
        on right: 1 3
    letdef <let_def> (78)
        on left: 4 5
        on right: 3 28
    def_list <def_list> (79)
        on left: 6 7
        on right: 4 5 7
    def <def> (80)
        on left: 8 9 10 11 12 13 14 15
        on right: 4 5 7
    par_list <par_list> (81)
        on left: 16 17
        on right: 10 11 17
    par <par> (82)
        on left: 18 19
        on right: 10 11 17
    expr_comma_list <expr_comma_list> (83)
        on left: 20 21
        on right: 14 15 21 72
    expr <expr> (84)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 8 9 10 11 14 15 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 63 72
    func_expr <expr> (85)
        on left: 62 63 64 65 66 67 68 69 70 71 72
        on right: 22 23 62 74
    func_expr_list <func_expr_list> (86)
        on left: 73 74
        on right: 23 74
    type <type> (87)
        on left: 75 76 77 78 79 80 81 82 83 84
        on right: 9 10 13 15 19 26 80 81 82 83 84
    asterisk_list <dimension_count> (88)
        on left: 85 86
        on right: 84 86


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (letdef_list)

    program      go to state 1
    letdef_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: letdef_list •
    3 letdef_list: letdef_list • letdef

    "let"  shift, and go to state 4

    $default  reduce using rule 1 (program)

    letdef  go to state 5


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 letdef: "let" • "rec" def def_list
    5       | "let" • def def_list

    "mutable"  shift, and go to state 6
    "rec"      shift, and go to state 7
    T_ID       shift, and go to state 8

    def  go to state 9


State 5

    3 letdef_list: letdef_list letdef •

    $default  reduce using rule 3 (letdef_list)


State 6

   12 def: "mutable" • T_ID
   13    | "mutable" • T_ID ':' type
   14    | "mutable" • T_ID '[' expr expr_comma_list ']'
   15    | "mutable" • T_ID '[' expr expr_comma_list ']' ':' type

    T_ID  shift, and go to state 10


State 7

    4 letdef: "let" "rec" • def def_list

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 11


State 8

    8 def: T_ID • '=' expr
    9    | T_ID • ':' type '=' expr
   10    | T_ID • par par_list ':' type '=' expr
   11    | T_ID • par par_list '=' expr

    T_ID  shift, and go to state 12
    '='   shift, and go to state 13
    ':'   shift, and go to state 14
    '('   shift, and go to state 15

    par  go to state 16


State 9

    5 letdef: "let" def • def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 17


State 10

   12 def: "mutable" T_ID •
   13    | "mutable" T_ID • ':' type
   14    | "mutable" T_ID • '[' expr expr_comma_list ']'
   15    | "mutable" T_ID • '[' expr expr_comma_list ']' ':' type

    ':'  shift, and go to state 18
    '['  shift, and go to state 19

    $default  reduce using rule 12 (def)


State 11

    4 letdef: "let" "rec" def • def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 20


State 12

   18 par: T_ID •

    $default  reduce using rule 18 (par)


State 13

    8 def: T_ID '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 43
    func_expr  go to state 44


State 14

    9 def: T_ID ':' • type '=' expr

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 52


State 15

   19 par: '(' • T_ID ':' type ')'

    T_ID  shift, and go to state 53


State 16

   10 def: T_ID par • par_list ':' type '=' expr
   11    | T_ID par • par_list '=' expr

    $default  reduce using rule 16 (par_list)

    par_list  go to state 54


State 17

    5 letdef: "let" def def_list •
    7 def_list: def_list • "and" def

    "and"  shift, and go to state 55

    $default  reduce using rule 5 (letdef)


State 18

   13 def: "mutable" T_ID ':' • type

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 56


State 19

   14 def: "mutable" T_ID '[' • expr expr_comma_list ']'
   15    | "mutable" T_ID '[' • expr expr_comma_list ']' ':' type

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 57
    func_expr  go to state 44


State 20

    4 letdef: "let" "rec" def def_list •
    7 def_list: def_list • "and" def

    "and"  shift, and go to state 55

    $default  reduce using rule 4 (letdef)


State 21

   29 expr: "begin" • expr "end"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 58
    func_expr  go to state 44


State 22

   27 expr: "delete" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 59
    func_expr  go to state 44


State 23

   24 expr: "dim" • T_ID
   25     | "dim" • T_CONST_INT T_ID

    T_ID         shift, and go to state 60
    T_CONST_INT  shift, and go to state 61


State 24

   71 func_expr: "false" •

    $default  reduce using rule 71 (func_expr)


State 25

   33 expr: "for" • T_ID '=' expr "to" expr "do" expr "done"
   34     | "for" • T_ID '=' expr "downto" expr "do" expr "done"

    T_ID  shift, and go to state 62


State 26

   30 expr: "if" • expr "then" expr
   31     | "if" • expr "then" expr "else" expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 63
    func_expr  go to state 44


State 27

   26 expr: "new" • type

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 64


State 28

   39 expr: "not" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 65
    func_expr  go to state 44


State 29

   70 func_expr: "true" •

    $default  reduce using rule 70 (func_expr)


State 30

   32 expr: "while" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 66
    func_expr  go to state 44


State 31

   37 expr: "+." • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 67
    func_expr  go to state 44


State 32

   38 expr: "-." • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 68
    func_expr  go to state 44


State 33

   23 expr: T_ID • func_expr func_expr_list
   65 func_expr: T_ID •
   72          | T_ID • '[' expr expr_comma_list ']'

    "false"           shift, and go to state 24
    "true"            shift, and go to state 29
    T_ID              shift, and go to state 69
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '!'               shift, and go to state 40
    '['               shift, and go to state 70
    '('               shift, and go to state 41

    $default  reduce using rule 65 (func_expr)

    func_expr  go to state 71


State 34

   68 func_expr: T_CONST_CHAR •

    $default  reduce using rule 68 (func_expr)


State 35

   66 func_expr: T_CONST_INT •

    $default  reduce using rule 66 (func_expr)


State 36

   67 func_expr: T_CONST_FLOAT •

    $default  reduce using rule 67 (func_expr)


State 37

   69 func_expr: T_STRING_LITERAL •

    $default  reduce using rule 69 (func_expr)


State 38

   35 expr: '+' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 72
    func_expr  go to state 44


State 39

   36 expr: '-' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 73
    func_expr  go to state 44


State 40

   62 func_expr: '!' • func_expr

    "false"           shift, and go to state 24
    "true"            shift, and go to state 29
    T_ID              shift, and go to state 69
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    func_expr  go to state 74


State 41

   63 func_expr: '(' • expr ')'
   64          | '(' • ')'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41
    ')'               shift, and go to state 75

    letdef     go to state 42
    expr       go to state 76
    func_expr  go to state 44


State 42

   28 expr: letdef • "in" expr

    "in"  shift, and go to state 77


State 43

    8 def: T_ID '=' expr •
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 8 (def)


State 44

   22 expr: func_expr •

    $default  reduce using rule 22 (expr)


State 45

   83 type: "array" • "of" type
   84     | "array" • '[' asterisk_list ']' "of" type

    "of"  shift, and go to state 100
    '['   shift, and go to state 101


State 46

   78 type: "bool" •

    $default  reduce using rule 78 (type)


State 47

   77 type: "char" •

    $default  reduce using rule 77 (type)


State 48

   76 type: "int" •

    $default  reduce using rule 76 (type)


State 49

   79 type: "float" •

    $default  reduce using rule 79 (type)


State 50

   75 type: "unit" •

    $default  reduce using rule 75 (type)


State 51

   80 type: '(' • type ')'

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 102


State 52

    9 def: T_ID ':' type • '=' expr
   81 type: type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104
    '='    shift, and go to state 105


State 53

   19 par: '(' T_ID • ':' type ')'

    ':'  shift, and go to state 106


State 54

   10 def: T_ID par par_list • ':' type '=' expr
   11    | T_ID par par_list • '=' expr
   17 par_list: par_list • par

    T_ID  shift, and go to state 12
    '='   shift, and go to state 107
    ':'   shift, and go to state 108
    '('   shift, and go to state 15

    par  go to state 109


State 55

    7 def_list: def_list "and" • def

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 110


State 56

   13 def: "mutable" T_ID ':' type •
   81 type: type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104

    $default  reduce using rule 13 (def)


State 57

   14 def: "mutable" T_ID '[' expr • expr_comma_list ']'
   15    | "mutable" T_ID '[' expr • expr_comma_list ']' ':' type
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 20 (expr_comma_list)

    expr_comma_list  go to state 111


State 58

   29 expr: "begin" expr • "end"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "end"  shift, and go to state 112
    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99


State 59

   27 expr: "delete" expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    $default  reduce using rule 27 (expr)


State 60

   24 expr: "dim" T_ID •

    $default  reduce using rule 24 (expr)


State 61

   25 expr: "dim" T_CONST_INT • T_ID

    T_ID  shift, and go to state 113


State 62

   33 expr: "for" T_ID • '=' expr "to" expr "do" expr "done"
   34     | "for" T_ID • '=' expr "downto" expr "do" expr "done"

    '='  shift, and go to state 114


State 63

   30 expr: "if" expr • "then" expr
   31     | "if" expr • "then" expr "else" expr
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"   shift, and go to state 78
    "then"  shift, and go to state 115
    "&&"    shift, and go to state 79
    "||"    shift, and go to state 80
    "<>"    shift, and go to state 81
    "<="    shift, and go to state 82
    ">="    shift, and go to state 83
    "=="    shift, and go to state 84
    "!="    shift, and go to state 85
    ":="    shift, and go to state 86
    "+."    shift, and go to state 87
    "-."    shift, and go to state 88
    "*."    shift, and go to state 89
    "/."    shift, and go to state 90
    "**"    shift, and go to state 91
    ';'     shift, and go to state 92
    '='     shift, and go to state 93
    '>'     shift, and go to state 94
    '<'     shift, and go to state 95
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 64

   26 expr: "new" type •
   81 type: type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104

    $default  reduce using rule 26 (expr)


State 65

   39 expr: "not" expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    $default  reduce using rule 39 (expr)


State 66

   32 expr: "while" expr • "do" expr "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "do"   shift, and go to state 116
    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99


State 67

   37 expr: "+." expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    $default  reduce using rule 37 (expr)


State 68

   38 expr: "-." expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    $default  reduce using rule 38 (expr)


State 69

   65 func_expr: T_ID •
   72          | T_ID • '[' expr expr_comma_list ']'

    '['  shift, and go to state 70

    $default  reduce using rule 65 (func_expr)


State 70

   72 func_expr: T_ID '[' • expr expr_comma_list ']'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 117
    func_expr  go to state 44


State 71

   23 expr: T_ID func_expr • func_expr_list

    $default  reduce using rule 73 (func_expr_list)

    func_expr_list  go to state 118


State 72

   35 expr: '+' expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    $default  reduce using rule 35 (expr)


State 73

   36 expr: '-' expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    $default  reduce using rule 36 (expr)


State 74

   62 func_expr: '!' func_expr •

    $default  reduce using rule 62 (func_expr)


State 75

   64 func_expr: '(' ')' •

    $default  reduce using rule 64 (func_expr)


State 76

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr
   63 func_expr: '(' expr • ')'

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99
    ')'    shift, and go to state 119


State 77

   28 expr: letdef "in" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 120
    func_expr  go to state 44


State 78

   61 expr: expr "mod" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 121
    func_expr  go to state 44


State 79

   57 expr: expr "&&" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 122
    func_expr  go to state 44


State 80

   58 expr: expr "||" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 123
    func_expr  go to state 44


State 81

   50 expr: expr "<>" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 124
    func_expr  go to state 44


State 82

   53 expr: expr "<=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 125
    func_expr  go to state 44


State 83

   54 expr: expr ">=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 126
    func_expr  go to state 44


State 84

   55 expr: expr "==" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 127
    func_expr  go to state 44


State 85

   56 expr: expr "!=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 128
    func_expr  go to state 44


State 86

   60 expr: expr ":=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 129
    func_expr  go to state 44


State 87

   44 expr: expr "+." • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 130
    func_expr  go to state 44


State 88

   45 expr: expr "-." • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 131
    func_expr  go to state 44


State 89

   46 expr: expr "*." • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 132
    func_expr  go to state 44


State 90

   47 expr: expr "/." • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 133
    func_expr  go to state 44


State 91

   48 expr: expr "**" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 134
    func_expr  go to state 44


State 92

   59 expr: expr ';' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 135
    func_expr  go to state 44


State 93

   49 expr: expr '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 136
    func_expr  go to state 44


State 94

   52 expr: expr '>' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 137
    func_expr  go to state 44


State 95

   51 expr: expr '<' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 138
    func_expr  go to state 44


State 96

   40 expr: expr '+' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 139
    func_expr  go to state 44


State 97

   41 expr: expr '-' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 140
    func_expr  go to state 44


State 98

   42 expr: expr '*' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 141
    func_expr  go to state 44


State 99

   43 expr: expr '/' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 142
    func_expr  go to state 44


State 100

   83 type: "array" "of" • type

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 143


State 101

   84 type: "array" '[' • asterisk_list ']' "of" type

    '*'  shift, and go to state 144

    asterisk_list  go to state 145


State 102

   80 type: '(' type • ')'
   81     | type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104
    ')'    shift, and go to state 146


State 103

   82 type: type "ref" •

    $default  reduce using rule 82 (type)


State 104

   81 type: type "->" • type

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 147


State 105

    9 def: T_ID ':' type '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 148
    func_expr  go to state 44


State 106

   19 par: '(' T_ID ':' • type ')'

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 149


State 107

   11 def: T_ID par par_list '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 150
    func_expr  go to state 44


State 108

   10 def: T_ID par par_list ':' • type '=' expr

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 151


State 109

   17 par_list: par_list par •

    $default  reduce using rule 17 (par_list)


State 110

    7 def_list: def_list "and" def •

    $default  reduce using rule 7 (def_list)


State 111

   14 def: "mutable" T_ID '[' expr expr_comma_list • ']'
   15    | "mutable" T_ID '[' expr expr_comma_list • ']' ':' type
   21 expr_comma_list: expr_comma_list • ',' expr

    ']'  shift, and go to state 152
    ','  shift, and go to state 153


State 112

   29 expr: "begin" expr "end" •

    $default  reduce using rule 29 (expr)


State 113

   25 expr: "dim" T_CONST_INT T_ID •

    $default  reduce using rule 25 (expr)


State 114

   33 expr: "for" T_ID '=' • expr "to" expr "do" expr "done"
   34     | "for" T_ID '=' • expr "downto" expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 154
    func_expr  go to state 44


State 115

   30 expr: "if" expr "then" • expr
   31     | "if" expr "then" • expr "else" expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 155
    func_expr  go to state 44


State 116

   32 expr: "while" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 156
    func_expr  go to state 44


State 117

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr
   72 func_expr: T_ID '[' expr • expr_comma_list ']'

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 20 (expr_comma_list)

    expr_comma_list  go to state 157


State 118

   23 expr: T_ID func_expr func_expr_list •
   74 func_expr_list: func_expr_list • func_expr

    "false"           shift, and go to state 24
    "true"            shift, and go to state 29
    T_ID              shift, and go to state 69
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    $default  reduce using rule 23 (expr)

    func_expr  go to state 158


State 119

   63 func_expr: '(' expr ')' •

    $default  reduce using rule 63 (func_expr)


State 120

   28 expr: letdef "in" expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 28 (expr)


State 121

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr
   61     | expr "mod" expr •

    "**"  shift, and go to state 91

    $default  reduce using rule 61 (expr)


State 122

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   57     | expr "&&" expr •
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 57 (expr)


State 123

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   58     | expr "||" expr •
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 58 (expr)


State 124

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   50     | expr "<>" expr •
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 50 (expr)


State 125

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   53     | expr "<=" expr •
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 53 (expr)


State 126

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   54     | expr ">=" expr •
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 54 (expr)


State 127

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   55     | expr "==" expr •
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 55 (expr)


State 128

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   56     | expr "!=" expr •
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 56 (expr)


State 129

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   60     | expr ":=" expr •
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    ":="  error (nonassociative)

    $default  reduce using rule 60 (expr)


State 130

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   44     | expr "+." expr •
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 44 (expr)


State 131

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   45     | expr "-." expr •
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 45 (expr)


State 132

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   46     | expr "*." expr •
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "**"  shift, and go to state 91

    $default  reduce using rule 46 (expr)


State 133

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   47     | expr "/." expr •
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "**"  shift, and go to state 91

    $default  reduce using rule 47 (expr)


State 134

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   48     | expr "**" expr •
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "**"  shift, and go to state 91

    $default  reduce using rule 48 (expr)


State 135

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   59     | expr ';' expr •
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 59 (expr)


State 136

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   49     | expr '=' expr •
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 49 (expr)


State 137

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   52     | expr '>' expr •
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 52 (expr)


State 138

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   51     | expr '<' expr •
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 51 (expr)


State 139

   40 expr: expr • '+' expr
   40     | expr '+' expr •
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 40 (expr)


State 140

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   41     | expr '-' expr •
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 41 (expr)


State 141

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   42     | expr '*' expr •
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "**"  shift, and go to state 91

    $default  reduce using rule 42 (expr)


State 142

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   43     | expr '/' expr •
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "**"  shift, and go to state 91

    $default  reduce using rule 43 (expr)


State 143

   81 type: type • "->" type
   82     | type • "ref"
   83     | "array" "of" type •

    $default  reduce using rule 83 (type)


State 144

   85 asterisk_list: '*' •

    $default  reduce using rule 85 (asterisk_list)


State 145

   84 type: "array" '[' asterisk_list • ']' "of" type
   86 asterisk_list: asterisk_list • ',' '*'

    ']'  shift, and go to state 159
    ','  shift, and go to state 160


State 146

   80 type: '(' type ')' •

    $default  reduce using rule 80 (type)


State 147

   81 type: type • "->" type
   81     | type "->" type •
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104

    $default  reduce using rule 81 (type)


State 148

    9 def: T_ID ':' type '=' expr •
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 9 (def)


State 149

   19 par: '(' T_ID ':' type • ')'
   81 type: type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104
    ')'    shift, and go to state 161


State 150

   11 def: T_ID par par_list '=' expr •
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 11 (def)


State 151

   10 def: T_ID par par_list ':' type • '=' expr
   81 type: type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104
    '='    shift, and go to state 162


State 152

   14 def: "mutable" T_ID '[' expr expr_comma_list ']' •
   15    | "mutable" T_ID '[' expr expr_comma_list ']' • ':' type

    ':'  shift, and go to state 163

    $default  reduce using rule 14 (def)


State 153

   21 expr_comma_list: expr_comma_list ',' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 164
    func_expr  go to state 44


State 154

   33 expr: "for" T_ID '=' expr • "to" expr "do" expr "done"
   34     | "for" T_ID '=' expr • "downto" expr "do" expr "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "downto"  shift, and go to state 165
    "mod"     shift, and go to state 78
    "to"      shift, and go to state 166
    "&&"      shift, and go to state 79
    "||"      shift, and go to state 80
    "<>"      shift, and go to state 81
    "<="      shift, and go to state 82
    ">="      shift, and go to state 83
    "=="      shift, and go to state 84
    "!="      shift, and go to state 85
    ":="      shift, and go to state 86
    "+."      shift, and go to state 87
    "-."      shift, and go to state 88
    "*."      shift, and go to state 89
    "/."      shift, and go to state 90
    "**"      shift, and go to state 91
    ';'       shift, and go to state 92
    '='       shift, and go to state 93
    '>'       shift, and go to state 94
    '<'       shift, and go to state 95
    '+'       shift, and go to state 96
    '-'       shift, and go to state 97
    '*'       shift, and go to state 98
    '/'       shift, and go to state 99


State 155

   30 expr: "if" expr "then" expr •
   31     | "if" expr "then" expr • "else" expr
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "else"  shift, and go to state 167
    "mod"   shift, and go to state 78
    "&&"    shift, and go to state 79
    "||"    shift, and go to state 80
    "<>"    shift, and go to state 81
    "<="    shift, and go to state 82
    ">="    shift, and go to state 83
    "=="    shift, and go to state 84
    "!="    shift, and go to state 85
    ":="    shift, and go to state 86
    "+."    shift, and go to state 87
    "-."    shift, and go to state 88
    "*."    shift, and go to state 89
    "/."    shift, and go to state 90
    "**"    shift, and go to state 91
    '='     shift, and go to state 93
    '>'     shift, and go to state 94
    '<'     shift, and go to state 95
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99

    "else"    [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 156

   32 expr: "while" expr "do" expr • "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "done"  shift, and go to state 168
    "mod"   shift, and go to state 78
    "&&"    shift, and go to state 79
    "||"    shift, and go to state 80
    "<>"    shift, and go to state 81
    "<="    shift, and go to state 82
    ">="    shift, and go to state 83
    "=="    shift, and go to state 84
    "!="    shift, and go to state 85
    ":="    shift, and go to state 86
    "+."    shift, and go to state 87
    "-."    shift, and go to state 88
    "*."    shift, and go to state 89
    "/."    shift, and go to state 90
    "**"    shift, and go to state 91
    ';'     shift, and go to state 92
    '='     shift, and go to state 93
    '>'     shift, and go to state 94
    '<'     shift, and go to state 95
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 157

   21 expr_comma_list: expr_comma_list • ',' expr
   72 func_expr: T_ID '[' expr expr_comma_list • ']'

    ']'  shift, and go to state 169
    ','  shift, and go to state 153


State 158

   74 func_expr_list: func_expr_list func_expr •

    $default  reduce using rule 74 (func_expr_list)


State 159

   84 type: "array" '[' asterisk_list ']' • "of" type

    "of"  shift, and go to state 170


State 160

   86 asterisk_list: asterisk_list ',' • '*'

    '*'  shift, and go to state 171


State 161

   19 par: '(' T_ID ':' type ')' •

    $default  reduce using rule 19 (par)


State 162

   10 def: T_ID par par_list ':' type '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 172
    func_expr  go to state 44


State 163

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' • type

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 173


State 164

   21 expr_comma_list: expr_comma_list ',' expr •
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 21 (expr_comma_list)


State 165

   34 expr: "for" T_ID '=' expr "downto" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 174
    func_expr  go to state 44


State 166

   33 expr: "for" T_ID '=' expr "to" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 175
    func_expr  go to state 44


State 167

   31 expr: "if" expr "then" expr "else" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 176
    func_expr  go to state 44


State 168

   32 expr: "while" expr "do" expr "done" •

    $default  reduce using rule 32 (expr)


State 169

   72 func_expr: T_ID '[' expr expr_comma_list ']' •

    $default  reduce using rule 72 (func_expr)


State 170

   84 type: "array" '[' asterisk_list ']' "of" • type

    "array"  shift, and go to state 45
    "bool"   shift, and go to state 46
    "char"   shift, and go to state 47
    "int"    shift, and go to state 48
    "float"  shift, and go to state 49
    "unit"   shift, and go to state 50
    '('      shift, and go to state 51

    type  go to state 177


State 171

   86 asterisk_list: asterisk_list ',' '*' •

    $default  reduce using rule 86 (asterisk_list)


State 172

   10 def: T_ID par par_list ':' type '=' expr •
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 10 (def)


State 173

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' type •
   81 type: type • "->" type
   82     | type • "ref"

    "ref"  shift, and go to state 103
    "->"   shift, and go to state 104

    $default  reduce using rule 15 (def)


State 174

   34 expr: "for" T_ID '=' expr "downto" expr • "do" expr "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "do"   shift, and go to state 178
    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99


State 175

   33 expr: "for" T_ID '=' expr "to" expr • "do" expr "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "do"   shift, and go to state 179
    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    ';'    shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99


State 176

   31 expr: "if" expr "then" expr "else" expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "mod"  shift, and go to state 78
    "&&"   shift, and go to state 79
    "||"   shift, and go to state 80
    "<>"   shift, and go to state 81
    "<="   shift, and go to state 82
    ">="   shift, and go to state 83
    "=="   shift, and go to state 84
    "!="   shift, and go to state 85
    ":="   shift, and go to state 86
    "+."   shift, and go to state 87
    "-."   shift, and go to state 88
    "*."   shift, and go to state 89
    "/."   shift, and go to state 90
    "**"   shift, and go to state 91
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '+'    shift, and go to state 96
    '-'    shift, and go to state 97
    '*'    shift, and go to state 98
    '/'    shift, and go to state 99

    $default  reduce using rule 31 (expr)


State 177

   81 type: type • "->" type
   82     | type • "ref"
   84     | "array" '[' asterisk_list ']' "of" type •

    $default  reduce using rule 84 (type)


State 178

   34 expr: "for" T_ID '=' expr "downto" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 180
    func_expr  go to state 44


State 179

   33 expr: "for" T_ID '=' expr "to" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    "+."              shift, and go to state 31
    "-."              shift, and go to state 32
    T_ID              shift, and go to state 33
    T_CONST_CHAR      shift, and go to state 34
    T_CONST_INT       shift, and go to state 35
    T_CONST_FLOAT     shift, and go to state 36
    T_STRING_LITERAL  shift, and go to state 37
    '+'               shift, and go to state 38
    '-'               shift, and go to state 39
    '!'               shift, and go to state 40
    '('               shift, and go to state 41

    letdef     go to state 42
    expr       go to state 181
    func_expr  go to state 44


State 180

   34 expr: "for" T_ID '=' expr "downto" expr "do" expr • "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "done"  shift, and go to state 182
    "mod"   shift, and go to state 78
    "&&"    shift, and go to state 79
    "||"    shift, and go to state 80
    "<>"    shift, and go to state 81
    "<="    shift, and go to state 82
    ">="    shift, and go to state 83
    "=="    shift, and go to state 84
    "!="    shift, and go to state 85
    ":="    shift, and go to state 86
    "+."    shift, and go to state 87
    "-."    shift, and go to state 88
    "*."    shift, and go to state 89
    "/."    shift, and go to state 90
    "**"    shift, and go to state 91
    ';'     shift, and go to state 92
    '='     shift, and go to state 93
    '>'     shift, and go to state 94
    '<'     shift, and go to state 95
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 181

   33 expr: "for" T_ID '=' expr "to" expr "do" expr • "done"
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • "+." expr
   45     | expr • "-." expr
   46     | expr • "*." expr
   47     | expr • "/." expr
   48     | expr • "**" expr
   49     | expr • '=' expr
   50     | expr • "<>" expr
   51     | expr • '<' expr
   52     | expr • '>' expr
   53     | expr • "<=" expr
   54     | expr • ">=" expr
   55     | expr • "==" expr
   56     | expr • "!=" expr
   57     | expr • "&&" expr
   58     | expr • "||" expr
   59     | expr • ';' expr
   60     | expr • ":=" expr
   61     | expr • "mod" expr

    "done"  shift, and go to state 183
    "mod"   shift, and go to state 78
    "&&"    shift, and go to state 79
    "||"    shift, and go to state 80
    "<>"    shift, and go to state 81
    "<="    shift, and go to state 82
    ">="    shift, and go to state 83
    "=="    shift, and go to state 84
    "!="    shift, and go to state 85
    ":="    shift, and go to state 86
    "+."    shift, and go to state 87
    "-."    shift, and go to state 88
    "*."    shift, and go to state 89
    "/."    shift, and go to state 90
    "**"    shift, and go to state 91
    ';'     shift, and go to state 92
    '='     shift, and go to state 93
    '>'     shift, and go to state 94
    '<'     shift, and go to state 95
    '+'     shift, and go to state 96
    '-'     shift, and go to state 97
    '*'     shift, and go to state 98
    '/'     shift, and go to state 99


State 182

   34 expr: "for" T_ID '=' expr "downto" expr "do" expr "done" •

    $default  reduce using rule 34 (expr)


State 183

   33 expr: "for" T_ID '=' expr "to" expr "do" expr "done" •

    $default  reduce using rule 33 (expr)
