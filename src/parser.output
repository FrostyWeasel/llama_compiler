Terminals unused in grammar

    "match"
    "type"
    "with"
    T_CONSTRUCTOR_ID
    "**"


State 136 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: letdef_list

    2 letdef_list: %empty
    3            | letdef_list letdef

    4 letdef: "let" "rec" def def_list
    5       | "let" def def_list

    6 def_list: %empty
    7         | def_list "and" def

    8 def: T_ID '=' expr
    9    | T_ID ':' type '=' expr
   10    | T_ID par par_list ':' type '=' expr
   11    | T_ID par par_list '=' expr
   12    | "mutable" T_ID
   13    | "mutable" T_ID ':' type
   14    | "mutable" T_ID '[' expr expr_comma_list ']'
   15    | "mutable" T_ID '[' expr expr_comma_list ']' ':' type

   16 par_list: %empty
   17         | par_list par

   18 par: T_ID
   19    | '(' T_ID ':' type ')'

   20 expr_comma_list: %empty
   21                | expr_comma_list ',' expr

   22 expr: T_ID
   23     | T_CONST_INT
   24     | T_CONST_CHAR
   25     | T_STRING_LITERAL
   26     | "true"
   27     | "false"
   28     | '(' ')'
   29     | '(' expr ')'
   30     | T_ID expr expr_list
   31     | T_ID '[' expr expr_comma_list ']'
   32     | "dim" T_ID
   33     | "dim" T_CONST_INT T_ID
   34     | "new" type
   35     | "delete" expr
   36     | letdef "in" expr
   37     | "begin" expr "end"
   38     | "if" expr "then" expr
   39     | "if" expr "then" expr "else" expr
   40     | "while" expr "do" expr "done"
   41     | "for" T_ID '=' expr "to" expr "do" expr "done"
   42     | "for" T_ID '=' expr "downto" expr "do" expr "done"
   43     | '+' expr
   44     | '-' expr
   45     | '!' expr
   46     | "not" expr
   47     | expr '+' expr
   48     | expr '-' expr
   49     | expr '*' expr
   50     | expr '/' expr
   51     | expr '=' expr
   52     | expr "<>" expr
   53     | expr '<' expr
   54     | expr '>' expr
   55     | expr "<=" expr
   56     | expr ">=" expr
   57     | expr "==" expr
   58     | expr "!=" expr
   59     | expr "&&" expr
   60     | expr "||" expr
   61     | expr ';' expr
   62     | expr ":=" expr
   63     | expr "mod" expr

   64 expr_list: %empty
   65          | expr_list expr

   66 type: "unit"
   67     | "int"
   68     | "char"
   69     | "bool"
   70     | '(' type ')'
   71     | type "->" type
   72     | type "ref"
   73     | "array" "of" type
   74     | "array" '[' '*' asterisk_list ']' "of" type

   75 asterisk_list: %empty
   76              | asterisk_list ',' '*'


Terminals, with rules where they appear

    $end (0) 0
    '!' <op> (33) 45
    '(' (40) 19 28 29 70
    ')' (41) 19 28 29 70
    '*' <op> (42) 49 74 76
    '+' <op> (43) 43 47
    ',' (44) 21 76
    '-' <op> (45) 44 48
    '/' <op> (47) 50
    ':' (58) 9 10 13 15 19
    ';' <op> (59) 61
    '<' <op> (60) 53
    '=' <op> (61) 8 9 10 11 41 42 51
    '>' <op> (62) 54
    '[' (91) 14 15 31 74
    ']' (93) 14 15 31 74
    error (256)
    "and" (258) 7
    "array" (259) 73 74
    "begin" (260) 37
    "bool" (261) 69
    "char" (262) 68
    "delete" <op> (263) 35
    "dim" (264) 32 33
    "do" (265) 40 41 42
    "done" (266) 40 41 42
    "downto" (267) 42
    "else" (268) 39
    "end" (269) 37
    "false" (270) 27
    "for" (271) 41 42
    "if" (272) 38 39
    "in" (273) 36
    "int" (274) 67
    "let" (275) 4 5
    "match" (276)
    "mod" <op> (277) 63
    "mutable" (278) 12 13 14 15
    "new" (279) 34
    "not" <op> (280) 46
    "of" (281) 73 74
    "rec" (282) 4
    "ref" (283) 72
    "then" (284) 38 39
    "to" (285) 41
    "true" (286) 26
    "type" (287)
    "unit" (288) 66
    "while" (289) 40
    "with" (290)
    "->" (291) 71
    "&&" <op> (292) 59
    "||" <op> (293) 60
    "<>" <op> (294) 52
    "<=" <op> (295) 55
    ">=" <op> (296) 56
    "==" <op> (297) 57
    "!=" <op> (298) 58
    ":=" <op> (299) 62
    T_ID <id> (300) 8 9 10 11 12 13 14 15 18 19 22 30 31 32 33 41 42
    T_CONSTRUCTOR_ID (301)
    T_CONST_CHAR <const_char> (302) 24
    T_CONST_INT <number> (303) 23 33
    T_STRING_LITERAL <string_literal> (304) 25
    EXPR_LIST (305)
    EMPTY_EXPR_LIST (306)
    ID (307)
    LOCAL_DEFS (308)
    IF_THEN (309)
    IF_THEN_ELSE (310)
    "**" <op> (311)
    UNOP <op> (312)
    FUNCTION_CALL (313)
    ARRAY_INDEX (314)


Nonterminals, with rules where they appear

    $accept (75)
        on left: 0
    program <letdef_list> (76)
        on left: 1
        on right: 0
    letdef_list <letdef_list> (77)
        on left: 2 3
        on right: 1 3
    letdef <let_def> (78)
        on left: 4 5
        on right: 3 36
    def_list <def_list> (79)
        on left: 6 7
        on right: 4 5 7
    def <def> (80)
        on left: 8 9 10 11 12 13 14 15
        on right: 4 5 7
    par_list <par_list> (81)
        on left: 16 17
        on right: 10 11 17
    par <par> (82)
        on left: 18 19
        on right: 10 11 17
    expr_comma_list <expr_comma_list> (83)
        on left: 20 21
        on right: 14 15 21 31
    expr <expr> (84)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
        on right: 8 9 10 11 14 15 21 29 30 31 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 65
    expr_list <expr_list> (85)
        on left: 64 65
        on right: 30 65
    type <type> (86)
        on left: 66 67 68 69 70 71 72 73 74
        on right: 9 10 13 15 19 34 70 71 72 73 74
    asterisk_list <dimension_count> (87)
        on left: 75 76
        on right: 74 76


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (letdef_list)

    program      go to state 1
    letdef_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: letdef_list •
    3 letdef_list: letdef_list • letdef

    "let"  shift, and go to state 4

    $default  reduce using rule 1 (program)

    letdef  go to state 5


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 letdef: "let" • "rec" def def_list
    5       | "let" • def def_list

    "mutable"  shift, and go to state 6
    "rec"      shift, and go to state 7
    T_ID       shift, and go to state 8

    def  go to state 9


State 5

    3 letdef_list: letdef_list letdef •

    $default  reduce using rule 3 (letdef_list)


State 6

   12 def: "mutable" • T_ID
   13    | "mutable" • T_ID ':' type
   14    | "mutable" • T_ID '[' expr expr_comma_list ']'
   15    | "mutable" • T_ID '[' expr expr_comma_list ']' ':' type

    T_ID  shift, and go to state 10


State 7

    4 letdef: "let" "rec" • def def_list

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 11


State 8

    8 def: T_ID • '=' expr
    9    | T_ID • ':' type '=' expr
   10    | T_ID • par par_list ':' type '=' expr
   11    | T_ID • par par_list '=' expr

    T_ID  shift, and go to state 12
    '='   shift, and go to state 13
    '('   shift, and go to state 14
    ':'   shift, and go to state 15

    par  go to state 16


State 9

    5 letdef: "let" def • def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 17


State 10

   12 def: "mutable" T_ID •
   13    | "mutable" T_ID • ':' type
   14    | "mutable" T_ID • '[' expr expr_comma_list ']'
   15    | "mutable" T_ID • '[' expr expr_comma_list ']' ':' type

    ':'  shift, and go to state 18
    '['  shift, and go to state 19

    $default  reduce using rule 12 (def)


State 11

    4 letdef: "let" "rec" def • def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 20


State 12

   18 par: T_ID •

    $default  reduce using rule 18 (par)


State 13

    8 def: T_ID '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 40


State 14

   19 par: '(' • T_ID ':' type ')'

    T_ID  shift, and go to state 41


State 15

    9 def: T_ID ':' • type '=' expr

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 48


State 16

   10 def: T_ID par • par_list ':' type '=' expr
   11    | T_ID par • par_list '=' expr

    $default  reduce using rule 16 (par_list)

    par_list  go to state 49


State 17

    5 letdef: "let" def def_list •
    7 def_list: def_list • "and" def

    "and"  shift, and go to state 50

    $default  reduce using rule 5 (letdef)


State 18

   13 def: "mutable" T_ID ':' • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 51


State 19

   14 def: "mutable" T_ID '[' • expr expr_comma_list ']'
   15    | "mutable" T_ID '[' • expr expr_comma_list ']' ':' type

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 52


State 20

    4 letdef: "let" "rec" def def_list •
    7 def_list: def_list • "and" def

    "and"  shift, and go to state 50

    $default  reduce using rule 4 (letdef)


State 21

   37 expr: "begin" • expr "end"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 53


State 22

   35 expr: "delete" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 54


State 23

   32 expr: "dim" • T_ID
   33     | "dim" • T_CONST_INT T_ID

    T_ID         shift, and go to state 55
    T_CONST_INT  shift, and go to state 56


State 24

   27 expr: "false" •

    $default  reduce using rule 27 (expr)


State 25

   41 expr: "for" • T_ID '=' expr "to" expr "do" expr "done"
   42     | "for" • T_ID '=' expr "downto" expr "do" expr "done"

    T_ID  shift, and go to state 57


State 26

   38 expr: "if" • expr "then" expr
   39     | "if" • expr "then" expr "else" expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 58


State 27

   34 expr: "new" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 59


State 28

   46 expr: "not" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 60


State 29

   26 expr: "true" •

    $default  reduce using rule 26 (expr)


State 30

   40 expr: "while" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 61


State 31

   22 expr: T_ID •
   30     | T_ID • expr expr_list
   31     | T_ID • '[' expr expr_comma_list ']'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38
    '['               shift, and go to state 62

    $default  reduce using rule 22 (expr)

    letdef  go to state 39
    expr    go to state 63


State 32

   24 expr: T_CONST_CHAR •

    $default  reduce using rule 24 (expr)


State 33

   23 expr: T_CONST_INT •

    $default  reduce using rule 23 (expr)


State 34

   25 expr: T_STRING_LITERAL •

    $default  reduce using rule 25 (expr)


State 35

   43 expr: '+' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 64


State 36

   44 expr: '-' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 65


State 37

   28 expr: '(' • ')'
   29     | '(' • expr ')'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38
    ')'               shift, and go to state 66

    letdef  go to state 39
    expr    go to state 67


State 38

   45 expr: '!' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 68


State 39

   36 expr: letdef • "in" expr

    "in"  shift, and go to state 69


State 40

    8 def: T_ID '=' expr •
   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 8 (def)


State 41

   19 par: '(' T_ID • ':' type ')'

    ':'  shift, and go to state 87


State 42

   73 type: "array" • "of" type
   74     | "array" • '[' '*' asterisk_list ']' "of" type

    "of"  shift, and go to state 88
    '['   shift, and go to state 89


State 43

   69 type: "bool" •

    $default  reduce using rule 69 (type)


State 44

   68 type: "char" •

    $default  reduce using rule 68 (type)


State 45

   67 type: "int" •

    $default  reduce using rule 67 (type)


State 46

   66 type: "unit" •

    $default  reduce using rule 66 (type)


State 47

   70 type: '(' • type ')'

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 90


State 48

    9 def: T_ID ':' type • '=' expr
   71 type: type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92
    '='    shift, and go to state 93


State 49

   10 def: T_ID par par_list • ':' type '=' expr
   11    | T_ID par par_list • '=' expr
   17 par_list: par_list • par

    T_ID  shift, and go to state 12
    '='   shift, and go to state 94
    '('   shift, and go to state 14
    ':'   shift, and go to state 95

    par  go to state 96


State 50

    7 def_list: def_list "and" • def

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 97


State 51

   13 def: "mutable" T_ID ':' type •
   71 type: type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92

    $default  reduce using rule 13 (def)


State 52

   14 def: "mutable" T_ID '[' expr • expr_comma_list ']'
   15    | "mutable" T_ID '[' expr • expr_comma_list ']' ':' type
   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 20 (expr_comma_list)

    expr_comma_list  go to state 98


State 53

   37 expr: "begin" expr • "end"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "end"  shift, and go to state 99
    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86


State 54

   35 expr: "delete" expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 35 (expr)


State 55

   32 expr: "dim" T_ID •

    $default  reduce using rule 32 (expr)


State 56

   33 expr: "dim" T_CONST_INT • T_ID

    T_ID  shift, and go to state 100


State 57

   41 expr: "for" T_ID • '=' expr "to" expr "do" expr "done"
   42     | "for" T_ID • '=' expr "downto" expr "do" expr "done"

    '='  shift, and go to state 101


State 58

   38 expr: "if" expr • "then" expr
   39     | "if" expr • "then" expr "else" expr
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"   shift, and go to state 70
    "then"  shift, and go to state 102
    "&&"    shift, and go to state 71
    "||"    shift, and go to state 72
    "<>"    shift, and go to state 73
    "<="    shift, and go to state 74
    ">="    shift, and go to state 75
    "=="    shift, and go to state 76
    "!="    shift, and go to state 77
    ":="    shift, and go to state 78
    ';'     shift, and go to state 79
    '='     shift, and go to state 80
    '>'     shift, and go to state 81
    '<'     shift, and go to state 82
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 86


State 59

   34 expr: "new" type •
   71 type: type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92

    $default  reduce using rule 34 (expr)


State 60

   46 expr: "not" expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 46 (expr)


State 61

   40 expr: "while" expr • "do" expr "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "do"   shift, and go to state 103
    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86


State 62

   31 expr: T_ID '[' • expr expr_comma_list ']'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 104


State 63

   30 expr: T_ID expr • expr_list
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 64 (expr_list)

    expr_list  go to state 105


State 64

   43 expr: '+' expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 43 (expr)


State 65

   44 expr: '-' expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 44 (expr)


State 66

   28 expr: '(' ')' •

    $default  reduce using rule 28 (expr)


State 67

   29 expr: '(' expr • ')'
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86
    ')'    shift, and go to state 106


State 68

   45 expr: '!' expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 45 (expr)


State 69

   36 expr: letdef "in" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 107


State 70

   63 expr: expr "mod" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 108


State 71

   59 expr: expr "&&" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 109


State 72

   60 expr: expr "||" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 110


State 73

   52 expr: expr "<>" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 111


State 74

   55 expr: expr "<=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 112


State 75

   56 expr: expr ">=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 113


State 76

   57 expr: expr "==" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 114


State 77

   58 expr: expr "!=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 115


State 78

   62 expr: expr ":=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 116


State 79

   61 expr: expr ';' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 117


State 80

   51 expr: expr '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 118


State 81

   54 expr: expr '>' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 119


State 82

   53 expr: expr '<' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 120


State 83

   47 expr: expr '+' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 121


State 84

   48 expr: expr '-' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 122


State 85

   49 expr: expr '*' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 123


State 86

   50 expr: expr '/' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 124


State 87

   19 par: '(' T_ID ':' • type ')'

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 125


State 88

   73 type: "array" "of" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 126


State 89

   74 type: "array" '[' • '*' asterisk_list ']' "of" type

    '*'  shift, and go to state 127


State 90

   70 type: '(' type • ')'
   71     | type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92
    ')'    shift, and go to state 128


State 91

   72 type: type "ref" •

    $default  reduce using rule 72 (type)


State 92

   71 type: type "->" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 129


State 93

    9 def: T_ID ':' type '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 130


State 94

   11 def: T_ID par par_list '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 131


State 95

   10 def: T_ID par par_list ':' • type '=' expr

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 132


State 96

   17 par_list: par_list par •

    $default  reduce using rule 17 (par_list)


State 97

    7 def_list: def_list "and" def •

    $default  reduce using rule 7 (def_list)


State 98

   14 def: "mutable" T_ID '[' expr expr_comma_list • ']'
   15    | "mutable" T_ID '[' expr expr_comma_list • ']' ':' type
   21 expr_comma_list: expr_comma_list • ',' expr

    ']'  shift, and go to state 133
    ','  shift, and go to state 134


State 99

   37 expr: "begin" expr "end" •

    $default  reduce using rule 37 (expr)


State 100

   33 expr: "dim" T_CONST_INT T_ID •

    $default  reduce using rule 33 (expr)


State 101

   41 expr: "for" T_ID '=' • expr "to" expr "do" expr "done"
   42     | "for" T_ID '=' • expr "downto" expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 135


State 102

   38 expr: "if" expr "then" • expr
   39     | "if" expr "then" • expr "else" expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 136


State 103

   40 expr: "while" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 137


State 104

   31 expr: T_ID '[' expr • expr_comma_list ']'
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 20 (expr_comma_list)

    expr_comma_list  go to state 138


State 105

   30 expr: T_ID expr expr_list •
   65 expr_list: expr_list • expr

    "begin"           shift, and go to state 21
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    $default  reduce using rule 30 (expr)

    letdef  go to state 39
    expr    go to state 139


State 106

   29 expr: '(' expr ')' •

    $default  reduce using rule 29 (expr)


State 107

   36 expr: letdef "in" expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 36 (expr)


State 108

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr
   63     | expr "mod" expr •

    $default  reduce using rule 63 (expr)


State 109

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   59     | expr "&&" expr •
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 59 (expr)


State 110

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   60     | expr "||" expr •
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 60 (expr)


State 111

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   52     | expr "<>" expr •
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 52 (expr)


State 112

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   55     | expr "<=" expr •
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 55 (expr)


State 113

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   56     | expr ">=" expr •
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 56 (expr)


State 114

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   57     | expr "==" expr •
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 57 (expr)


State 115

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   58     | expr "!=" expr •
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 58 (expr)


State 116

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   62     | expr ":=" expr •
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    ":="  error (nonassociative)

    $default  reduce using rule 62 (expr)


State 117

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   61     | expr ';' expr •
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 61 (expr)


State 118

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   51     | expr '=' expr •
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 51 (expr)


State 119

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   54     | expr '>' expr •
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 54 (expr)


State 120

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   53     | expr '<' expr •
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 53 (expr)


State 121

   47 expr: expr • '+' expr
   47     | expr '+' expr •
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 47 (expr)


State 122

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   48     | expr '-' expr •
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 48 (expr)


State 123

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   49     | expr '*' expr •
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 49 (expr)


State 124

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   50     | expr '/' expr •
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    $default  reduce using rule 50 (expr)


State 125

   19 par: '(' T_ID ':' type • ')'
   71 type: type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92
    ')'    shift, and go to state 140


State 126

   71 type: type • "->" type
   72     | type • "ref"
   73     | "array" "of" type •

    $default  reduce using rule 73 (type)


State 127

   74 type: "array" '[' '*' • asterisk_list ']' "of" type

    $default  reduce using rule 75 (asterisk_list)

    asterisk_list  go to state 141


State 128

   70 type: '(' type ')' •

    $default  reduce using rule 70 (type)


State 129

   71 type: type • "->" type
   71     | type "->" type •
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92

    $default  reduce using rule 71 (type)


State 130

    9 def: T_ID ':' type '=' expr •
   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 9 (def)


State 131

   11 def: T_ID par par_list '=' expr •
   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 11 (def)


State 132

   10 def: T_ID par par_list ':' type • '=' expr
   71 type: type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92
    '='    shift, and go to state 142


State 133

   14 def: "mutable" T_ID '[' expr expr_comma_list ']' •
   15    | "mutable" T_ID '[' expr expr_comma_list ']' • ':' type

    ':'  shift, and go to state 143

    $default  reduce using rule 14 (def)


State 134

   21 expr_comma_list: expr_comma_list ',' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 144


State 135

   41 expr: "for" T_ID '=' expr • "to" expr "do" expr "done"
   42     | "for" T_ID '=' expr • "downto" expr "do" expr "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "downto"  shift, and go to state 145
    "mod"     shift, and go to state 70
    "to"      shift, and go to state 146
    "&&"      shift, and go to state 71
    "||"      shift, and go to state 72
    "<>"      shift, and go to state 73
    "<="      shift, and go to state 74
    ">="      shift, and go to state 75
    "=="      shift, and go to state 76
    "!="      shift, and go to state 77
    ":="      shift, and go to state 78
    ';'       shift, and go to state 79
    '='       shift, and go to state 80
    '>'       shift, and go to state 81
    '<'       shift, and go to state 82
    '+'       shift, and go to state 83
    '-'       shift, and go to state 84
    '*'       shift, and go to state 85
    '/'       shift, and go to state 86


State 136

   38 expr: "if" expr "then" expr •
   39     | "if" expr "then" expr • "else" expr
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "else"  shift, and go to state 147
    "mod"   shift, and go to state 70
    "&&"    shift, and go to state 71
    "||"    shift, and go to state 72
    "<>"    shift, and go to state 73
    "<="    shift, and go to state 74
    ">="    shift, and go to state 75
    "=="    shift, and go to state 76
    "!="    shift, and go to state 77
    ":="    shift, and go to state 78
    '='     shift, and go to state 80
    '>'     shift, and go to state 81
    '<'     shift, and go to state 82
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 86

    "else"    [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 137

   40 expr: "while" expr "do" expr • "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "done"  shift, and go to state 148
    "mod"   shift, and go to state 70
    "&&"    shift, and go to state 71
    "||"    shift, and go to state 72
    "<>"    shift, and go to state 73
    "<="    shift, and go to state 74
    ">="    shift, and go to state 75
    "=="    shift, and go to state 76
    "!="    shift, and go to state 77
    ":="    shift, and go to state 78
    ';'     shift, and go to state 79
    '='     shift, and go to state 80
    '>'     shift, and go to state 81
    '<'     shift, and go to state 82
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 86


State 138

   21 expr_comma_list: expr_comma_list • ',' expr
   31 expr: T_ID '[' expr expr_comma_list • ']'

    ']'  shift, and go to state 149
    ','  shift, and go to state 134


State 139

   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr
   65 expr_list: expr_list expr •

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 65 (expr_list)


State 140

   19 par: '(' T_ID ':' type ')' •

    $default  reduce using rule 19 (par)


State 141

   74 type: "array" '[' '*' asterisk_list • ']' "of" type
   76 asterisk_list: asterisk_list • ',' '*'

    ']'  shift, and go to state 150
    ','  shift, and go to state 151


State 142

   10 def: T_ID par par_list ':' type '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 152


State 143

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 153


State 144

   21 expr_comma_list: expr_comma_list ',' expr •
   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 21 (expr_comma_list)


State 145

   42 expr: "for" T_ID '=' expr "downto" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 154


State 146

   41 expr: "for" T_ID '=' expr "to" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 155


State 147

   39 expr: "if" expr "then" expr "else" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 156


State 148

   40 expr: "while" expr "do" expr "done" •

    $default  reduce using rule 40 (expr)


State 149

   31 expr: T_ID '[' expr expr_comma_list ']' •

    $default  reduce using rule 31 (expr)


State 150

   74 type: "array" '[' '*' asterisk_list ']' • "of" type

    "of"  shift, and go to state 157


State 151

   76 asterisk_list: asterisk_list ',' • '*'

    '*'  shift, and go to state 158


State 152

   10 def: T_ID par par_list ':' type '=' expr •
   47 expr: expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 10 (def)


State 153

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' type •
   71 type: type • "->" type
   72     | type • "ref"

    "ref"  shift, and go to state 91
    "->"   shift, and go to state 92

    $default  reduce using rule 15 (def)


State 154

   42 expr: "for" T_ID '=' expr "downto" expr • "do" expr "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "do"   shift, and go to state 159
    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86


State 155

   41 expr: "for" T_ID '=' expr "to" expr • "do" expr "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "do"   shift, and go to state 160
    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    ';'    shift, and go to state 79
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86


State 156

   39 expr: "if" expr "then" expr "else" expr •
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "mod"  shift, and go to state 70
    "&&"   shift, and go to state 71
    "||"   shift, and go to state 72
    "<>"   shift, and go to state 73
    "<="   shift, and go to state 74
    ">="   shift, and go to state 75
    "=="   shift, and go to state 76
    "!="   shift, and go to state 77
    ":="   shift, and go to state 78
    '='    shift, and go to state 80
    '>'    shift, and go to state 81
    '<'    shift, and go to state 82
    '+'    shift, and go to state 83
    '-'    shift, and go to state 84
    '*'    shift, and go to state 85
    '/'    shift, and go to state 86

    $default  reduce using rule 39 (expr)


State 157

   74 type: "array" '[' '*' asterisk_list ']' "of" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 161


State 158

   76 asterisk_list: asterisk_list ',' '*' •

    $default  reduce using rule 76 (asterisk_list)


State 159

   42 expr: "for" T_ID '=' expr "downto" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 162


State 160

   41 expr: "for" T_ID '=' expr "to" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '('               shift, and go to state 37
    '!'               shift, and go to state 38

    letdef  go to state 39
    expr    go to state 163


State 161

   71 type: type • "->" type
   72     | type • "ref"
   74     | "array" '[' '*' asterisk_list ']' "of" type •

    $default  reduce using rule 74 (type)


State 162

   42 expr: "for" T_ID '=' expr "downto" expr "do" expr • "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "done"  shift, and go to state 164
    "mod"   shift, and go to state 70
    "&&"    shift, and go to state 71
    "||"    shift, and go to state 72
    "<>"    shift, and go to state 73
    "<="    shift, and go to state 74
    ">="    shift, and go to state 75
    "=="    shift, and go to state 76
    "!="    shift, and go to state 77
    ":="    shift, and go to state 78
    ';'     shift, and go to state 79
    '='     shift, and go to state 80
    '>'     shift, and go to state 81
    '<'     shift, and go to state 82
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 86


State 163

   41 expr: "for" T_ID '=' expr "to" expr "do" expr • "done"
   47     | expr • '+' expr
   48     | expr • '-' expr
   49     | expr • '*' expr
   50     | expr • '/' expr
   51     | expr • '=' expr
   52     | expr • "<>" expr
   53     | expr • '<' expr
   54     | expr • '>' expr
   55     | expr • "<=" expr
   56     | expr • ">=" expr
   57     | expr • "==" expr
   58     | expr • "!=" expr
   59     | expr • "&&" expr
   60     | expr • "||" expr
   61     | expr • ';' expr
   62     | expr • ":=" expr
   63     | expr • "mod" expr

    "done"  shift, and go to state 165
    "mod"   shift, and go to state 70
    "&&"    shift, and go to state 71
    "||"    shift, and go to state 72
    "<>"    shift, and go to state 73
    "<="    shift, and go to state 74
    ">="    shift, and go to state 75
    "=="    shift, and go to state 76
    "!="    shift, and go to state 77
    ":="    shift, and go to state 78
    ';'     shift, and go to state 79
    '='     shift, and go to state 80
    '>'     shift, and go to state 81
    '<'     shift, and go to state 82
    '+'     shift, and go to state 83
    '-'     shift, and go to state 84
    '*'     shift, and go to state 85
    '/'     shift, and go to state 86


State 164

   42 expr: "for" T_ID '=' expr "downto" expr "do" expr "done" •

    $default  reduce using rule 42 (expr)


State 165

   41 expr: "for" T_ID '=' expr "to" expr "do" expr "done" •

    $default  reduce using rule 41 (expr)
