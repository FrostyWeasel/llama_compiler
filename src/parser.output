State 177 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: definition_list

    2 definition_list: %empty
    3                | definition_list letdef
    4                | definition_list typedef

    5 letdef: "let" "rec" def def_list
    6       | "let" def def_list

    7 def_list: %empty
    8         | def_list "and" def

    9 def: T_ID '=' expr
   10    | T_ID ':' type '=' expr
   11    | T_ID par par_list ':' type '=' expr
   12    | T_ID par par_list '=' expr
   13    | "mutable" T_ID
   14    | "mutable" T_ID ':' type
   15    | "mutable" T_ID '[' expr expr_comma_list ']'
   16    | "mutable" T_ID '[' expr expr_comma_list ']' ':' type

   17 typedef: "type" tdef tdef_list

   18 tdef_list: %empty
   19          | tdef_list "and" tdef

   20 tdef: T_ID '=' constr constr_list

   21 constr_list: %empty
   22            | constr_list '|' constr

   23 constr: T_CONSTRUCTOR_ID
   24       | T_CONSTRUCTOR_ID "of" type type_list

   25 par_list: %empty
   26         | par_list par

   27 par: T_ID
   28    | '(' T_ID ':' type ')'

   29 expr_comma_list: %empty
   30                | expr_comma_list ',' expr

   31 expr: func_expr
   32     | T_ID func_expr func_expr_list
   33     | T_CONSTRUCTOR_ID func_expr func_expr_list
   34     | "dim" T_ID
   35     | "dim" T_CONST_INT T_ID
   36     | "new" type
   37     | "delete" expr
   38     | letdef "in" expr
   39     | "begin" expr "end"
   40     | "if" expr "then" expr
   41     | "if" expr "then" expr "else" expr
   42     | "while" expr "do" expr "done"
   43     | "for" T_ID '=' expr "to" expr "do" expr "done"
   44     | "for" T_ID '=' expr "downto" expr "do" expr "done"
   45     | '+' expr
   46     | '-' expr
   47     | "+." expr
   48     | "-." expr
   49     | "not" expr
   50     | expr '+' expr
   51     | expr '-' expr
   52     | expr '*' expr
   53     | expr '/' expr
   54     | expr "+." expr
   55     | expr "-." expr
   56     | expr "*." expr
   57     | expr "/." expr
   58     | expr "**" expr
   59     | expr '=' expr
   60     | expr "<>" expr
   61     | expr '<' expr
   62     | expr '>' expr
   63     | expr "<=" expr
   64     | expr ">=" expr
   65     | expr "==" expr
   66     | expr "!=" expr
   67     | expr "&&" expr
   68     | expr "||" expr
   69     | expr ';' expr
   70     | expr ":=" expr
   71     | expr "mod" expr
   72     | "match" expr "with" clause clause_list "end"

   73 func_expr: '!' func_expr
   74          | '(' expr ')'
   75          | '(' ')'
   76          | T_ID
   77          | T_CONSTRUCTOR_ID
   78          | T_CONST_INT
   79          | T_CONST_FLOAT
   80          | T_CONST_CHAR
   81          | T_STRING_LITERAL
   82          | "true"
   83          | "false"
   84          | T_ID '[' expr expr_comma_list ']'

   85 func_expr_list: %empty
   86               | func_expr_list func_expr

   87 type_list: %empty
   88          | type_list type

   89 type: "unit"
   90     | "int"
   91     | "char"
   92     | "bool"
   93     | "float"
   94     | '(' type ')'
   95     | type "->" type
   96     | type "ref"
   97     | "array" "of" type
   98     | "array" '[' asterisk_list ']' "of" type
   99     | T_ID

  100 asterisk_list: '*'
  101              | asterisk_list ',' '*'

  102 clause_list: %empty
  103            | clause_list '|' clause

  104 clause: pattern "->" expr

  105 pattern: pattern_high
  106        | T_CONSTRUCTOR_ID pattern_high_list

  107 pattern_high_list: %empty
  108                  | pattern_high_list pattern_high

  109 pattern_high: '+' T_CONST_INT
  110             | '-' T_CONST_INT
  111             | T_CONST_INT
  112             | "+." T_CONST_FLOAT
  113             | "-." T_CONST_FLOAT
  114             | T_CONST_FLOAT
  115             | "true"
  116             | "false"
  117             | T_ID
  118             | '(' pattern ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' <op> (33) 73
    '(' (40) 28 74 75 94 118
    ')' (41) 28 74 75 94 118
    '*' <op> (42) 52 100 101
    '+' <op> (43) 45 50 109
    ',' (44) 30 101
    '-' <op> (45) 46 51 110
    '/' <op> (47) 53
    ':' (58) 10 11 14 16 28
    ';' <op> (59) 69
    '<' <op> (60) 61
    '=' <op> (61) 9 10 11 12 20 43 44 59
    '>' <op> (62) 62
    '[' (91) 15 16 84 98
    ']' (93) 15 16 84 98
    '|' (124) 22 103
    error (256)
    "and" (258) 8 19
    "array" (259) 97 98
    "begin" (260) 39
    "bool" (261) 92
    "char" (262) 91
    "delete" <op> (263) 37
    "dim" (264) 34 35
    "do" (265) 42 43 44
    "done" (266) 42 43 44
    "downto" (267) 44
    "else" (268) 41
    "end" (269) 39 72
    "false" (270) 83 116
    "for" (271) 43 44
    "if" (272) 40 41
    "in" (273) 38
    "int" (274) 90
    "float" (275) 93
    "let" (276) 5 6
    "match" (277) 72
    "mod" <op> (278) 71
    "mutable" (279) 13 14 15 16
    "new" (280) 36
    "not" <op> (281) 49
    "of" (282) 24 97 98
    "rec" (283) 5
    "ref" (284) 96
    "then" (285) 40 41
    "to" (286) 43
    "true" (287) 82 115
    "type" (288) 17
    "unit" (289) 89
    "while" (290) 42
    "with" (291) 72
    "->" (292) 95 104
    "&&" <op> (293) 67
    "||" <op> (294) 68
    "<>" <op> (295) 60
    "<=" <op> (296) 63
    ">=" <op> (297) 64
    "==" <op> (298) 65
    "!=" <op> (299) 66
    ":=" <op> (300) 70
    "+." <op> (301) 47 54 112
    "-." <op> (302) 48 55 113
    "*." <op> (303) 56
    "/." <op> (304) 57
    "**" <op> (305) 58
    T_ID <id> (306) 9 10 11 12 13 14 15 16 20 27 28 32 34 35 43 44 76 84 99 117
    T_CONSTRUCTOR_ID <id> (307) 23 24 33 77 106
    T_CONST_CHAR <const_char> (308) 80
    T_CONST_INT <number> (309) 35 78 109 110 111
    T_CONST_FLOAT <float_value> (310) 79 112 113 114
    T_STRING_LITERAL <string_literal> (311) 81
    IF_THEN (312)
    IF_THEN_ELSE (313)
    UNOP <op> (314)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    program <definition_list> (77)
        on left: 1
        on right: 0
    definition_list <definition_list> (78)
        on left: 2 3 4
        on right: 1 3 4
    letdef <let_def> (79)
        on left: 5 6
        on right: 3 38
    def_list <def_list> (80)
        on left: 7 8
        on right: 5 6 8
    def <def> (81)
        on left: 9 10 11 12 13 14 15 16
        on right: 5 6 8
    typedef <type_def> (82)
        on left: 17
        on right: 4
    tdef_list <t_def_list> (83)
        on left: 18 19
        on right: 17 19
    tdef <t_def> (84)
        on left: 20
        on right: 17 19
    constr_list <constructor_list> (85)
        on left: 21 22
        on right: 20 22
    constr <constructor> (86)
        on left: 23 24
        on right: 20 22
    par_list <par_list> (87)
        on left: 25 26
        on right: 11 12 26
    par <par> (88)
        on left: 27 28
        on right: 11 12 26
    expr_comma_list <expr_comma_list> (89)
        on left: 29 30
        on right: 15 16 30 84
    expr <expr> (90)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
        on right: 9 10 11 12 15 16 30 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 84 104
    func_expr <expr> (91)
        on left: 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 31 32 33 73 86
    func_expr_list <func_expr_list> (92)
        on left: 85 86
        on right: 32 33 86
    type_list <type_list> (93)
        on left: 87 88
        on right: 24 88
    type <type> (94)
        on left: 89 90 91 92 93 94 95 96 97 98 99
        on right: 10 11 14 16 24 28 36 88 94 95 96 97 98
    asterisk_list <dimension_count> (95)
        on left: 100 101
        on right: 98 101
    clause_list <clause_list> (96)
        on left: 102 103
        on right: 72 103
    clause <clause> (97)
        on left: 104
        on right: 72 103
    pattern <pattern> (98)
        on left: 105 106
        on right: 104 118
    pattern_high_list <pattern_list> (99)
        on left: 107 108
        on right: 106 108
    pattern_high <pattern> (100)
        on left: 109 110 111 112 113 114 115 116 117 118
        on right: 105 108


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (definition_list)

    program          go to state 1
    definition_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: definition_list .
    3 definition_list: definition_list . letdef
    4                | definition_list . typedef

    "let"   shift, and go to state 4
    "type"  shift, and go to state 5

    $default  reduce using rule 1 (program)

    letdef   go to state 6
    typedef  go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 letdef: "let" . "rec" def def_list
    6       | "let" . def def_list

    "mutable"  shift, and go to state 8
    "rec"      shift, and go to state 9
    T_ID       shift, and go to state 10

    def  go to state 11


State 5

   17 typedef: "type" . tdef tdef_list

    T_ID  shift, and go to state 12

    tdef  go to state 13


State 6

    3 definition_list: definition_list letdef .

    $default  reduce using rule 3 (definition_list)


State 7

    4 definition_list: definition_list typedef .

    $default  reduce using rule 4 (definition_list)


State 8

   13 def: "mutable" . T_ID
   14    | "mutable" . T_ID ':' type
   15    | "mutable" . T_ID '[' expr expr_comma_list ']'
   16    | "mutable" . T_ID '[' expr expr_comma_list ']' ':' type

    T_ID  shift, and go to state 14


State 9

    5 letdef: "let" "rec" . def def_list

    "mutable"  shift, and go to state 8
    T_ID       shift, and go to state 10

    def  go to state 15


State 10

    9 def: T_ID . '=' expr
   10    | T_ID . ':' type '=' expr
   11    | T_ID . par par_list ':' type '=' expr
   12    | T_ID . par par_list '=' expr

    T_ID  shift, and go to state 16
    '='   shift, and go to state 17
    ':'   shift, and go to state 18
    '('   shift, and go to state 19

    par  go to state 20


State 11

    6 letdef: "let" def . def_list

    $default  reduce using rule 7 (def_list)

    def_list  go to state 21


State 12

   20 tdef: T_ID . '=' constr constr_list

    '='  shift, and go to state 22


State 13

   17 typedef: "type" tdef . tdef_list

    $default  reduce using rule 18 (tdef_list)

    tdef_list  go to state 23


State 14

   13 def: "mutable" T_ID .
   14    | "mutable" T_ID . ':' type
   15    | "mutable" T_ID . '[' expr expr_comma_list ']'
   16    | "mutable" T_ID . '[' expr expr_comma_list ']' ':' type

    ':'  shift, and go to state 24
    '['  shift, and go to state 25

    $default  reduce using rule 13 (def)


State 15

    5 letdef: "let" "rec" def . def_list

    $default  reduce using rule 7 (def_list)

    def_list  go to state 26


State 16

   27 par: T_ID .

    $default  reduce using rule 27 (par)


State 17

    9 def: T_ID '=' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 51
    func_expr  go to state 52


State 18

   10 def: T_ID ':' . type '=' expr

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 61


State 19

   28 par: '(' . T_ID ':' type ')'

    T_ID  shift, and go to state 62


State 20

   11 def: T_ID par . par_list ':' type '=' expr
   12    | T_ID par . par_list '=' expr

    $default  reduce using rule 25 (par_list)

    par_list  go to state 63


State 21

    6 letdef: "let" def def_list .
    8 def_list: def_list . "and" def

    "and"  shift, and go to state 64

    $default  reduce using rule 6 (letdef)


State 22

   20 tdef: T_ID '=' . constr constr_list

    T_CONSTRUCTOR_ID  shift, and go to state 65

    constr  go to state 66


State 23

   17 typedef: "type" tdef tdef_list .
   19 tdef_list: tdef_list . "and" tdef

    "and"  shift, and go to state 67

    $default  reduce using rule 17 (typedef)


State 24

   14 def: "mutable" T_ID ':' . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 68


State 25

   15 def: "mutable" T_ID '[' . expr expr_comma_list ']'
   16    | "mutable" T_ID '[' . expr expr_comma_list ']' ':' type

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 69
    func_expr  go to state 52


State 26

    5 letdef: "let" "rec" def def_list .
    8 def_list: def_list . "and" def

    "and"  shift, and go to state 64

    $default  reduce using rule 5 (letdef)


State 27

   39 expr: "begin" . expr "end"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 70
    func_expr  go to state 52


State 28

   37 expr: "delete" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 71
    func_expr  go to state 52


State 29

   34 expr: "dim" . T_ID
   35     | "dim" . T_CONST_INT T_ID

    T_ID         shift, and go to state 72
    T_CONST_INT  shift, and go to state 73


State 30

   83 func_expr: "false" .

    $default  reduce using rule 83 (func_expr)


State 31

   43 expr: "for" . T_ID '=' expr "to" expr "do" expr "done"
   44     | "for" . T_ID '=' expr "downto" expr "do" expr "done"

    T_ID  shift, and go to state 74


State 32

   40 expr: "if" . expr "then" expr
   41     | "if" . expr "then" expr "else" expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 75
    func_expr  go to state 52


State 33

   72 expr: "match" . expr "with" clause clause_list "end"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 76
    func_expr  go to state 52


State 34

   36 expr: "new" . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 77


State 35

   49 expr: "not" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 78
    func_expr  go to state 52


State 36

   82 func_expr: "true" .

    $default  reduce using rule 82 (func_expr)


State 37

   42 expr: "while" . expr "do" expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 79
    func_expr  go to state 52


State 38

   47 expr: "+." . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 80
    func_expr  go to state 52


State 39

   48 expr: "-." . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 81
    func_expr  go to state 52


State 40

   32 expr: T_ID . func_expr func_expr_list
   76 func_expr: T_ID .
   84          | T_ID . '[' expr expr_comma_list ']'

    "false"           shift, and go to state 30
    "true"            shift, and go to state 36
    T_ID              shift, and go to state 82
    T_CONSTRUCTOR_ID  shift, and go to state 83
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '!'               shift, and go to state 48
    '['               shift, and go to state 84
    '('               shift, and go to state 49

    $default  reduce using rule 76 (func_expr)

    func_expr  go to state 85


State 41

   33 expr: T_CONSTRUCTOR_ID . func_expr func_expr_list
   77 func_expr: T_CONSTRUCTOR_ID .

    "false"           shift, and go to state 30
    "true"            shift, and go to state 36
    T_ID              shift, and go to state 82
    T_CONSTRUCTOR_ID  shift, and go to state 83
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    $default  reduce using rule 77 (func_expr)

    func_expr  go to state 86


State 42

   80 func_expr: T_CONST_CHAR .

    $default  reduce using rule 80 (func_expr)


State 43

   78 func_expr: T_CONST_INT .

    $default  reduce using rule 78 (func_expr)


State 44

   79 func_expr: T_CONST_FLOAT .

    $default  reduce using rule 79 (func_expr)


State 45

   81 func_expr: T_STRING_LITERAL .

    $default  reduce using rule 81 (func_expr)


State 46

   45 expr: '+' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 87
    func_expr  go to state 52


State 47

   46 expr: '-' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 88
    func_expr  go to state 52


State 48

   73 func_expr: '!' . func_expr

    "false"           shift, and go to state 30
    "true"            shift, and go to state 36
    T_ID              shift, and go to state 82
    T_CONSTRUCTOR_ID  shift, and go to state 83
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    func_expr  go to state 89


State 49

   74 func_expr: '(' . expr ')'
   75          | '(' . ')'

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49
    ')'               shift, and go to state 90

    letdef     go to state 50
    expr       go to state 91
    func_expr  go to state 52


State 50

   38 expr: letdef . "in" expr

    "in"  shift, and go to state 92


State 51

    9 def: T_ID '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 9 (def)


State 52

   31 expr: func_expr .

    $default  reduce using rule 31 (expr)


State 53

   97 type: "array" . "of" type
   98     | "array" . '[' asterisk_list ']' "of" type

    "of"  shift, and go to state 115
    '['   shift, and go to state 116


State 54

   92 type: "bool" .

    $default  reduce using rule 92 (type)


State 55

   91 type: "char" .

    $default  reduce using rule 91 (type)


State 56

   90 type: "int" .

    $default  reduce using rule 90 (type)


State 57

   93 type: "float" .

    $default  reduce using rule 93 (type)


State 58

   89 type: "unit" .

    $default  reduce using rule 89 (type)


State 59

   99 type: T_ID .

    $default  reduce using rule 99 (type)


State 60

   94 type: '(' . type ')'

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 117


State 61

   10 def: T_ID ':' type . '=' expr
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119
    '='    shift, and go to state 120


State 62

   28 par: '(' T_ID . ':' type ')'

    ':'  shift, and go to state 121


State 63

   11 def: T_ID par par_list . ':' type '=' expr
   12    | T_ID par par_list . '=' expr
   26 par_list: par_list . par

    T_ID  shift, and go to state 16
    '='   shift, and go to state 122
    ':'   shift, and go to state 123
    '('   shift, and go to state 19

    par  go to state 124


State 64

    8 def_list: def_list "and" . def

    "mutable"  shift, and go to state 8
    T_ID       shift, and go to state 10

    def  go to state 125


State 65

   23 constr: T_CONSTRUCTOR_ID .
   24       | T_CONSTRUCTOR_ID . "of" type type_list

    "of"  shift, and go to state 126

    $default  reduce using rule 23 (constr)


State 66

   20 tdef: T_ID '=' constr . constr_list

    $default  reduce using rule 21 (constr_list)

    constr_list  go to state 127


State 67

   19 tdef_list: tdef_list "and" . tdef

    T_ID  shift, and go to state 12

    tdef  go to state 128


State 68

   14 def: "mutable" T_ID ':' type .
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119

    $default  reduce using rule 14 (def)


State 69

   15 def: "mutable" T_ID '[' expr . expr_comma_list ']'
   16    | "mutable" T_ID '[' expr . expr_comma_list ']' ':' type
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 29 (expr_comma_list)

    expr_comma_list  go to state 129


State 70

   39 expr: "begin" expr . "end"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "end"  shift, and go to state 130
    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114


State 71

   37 expr: "delete" expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    $default  reduce using rule 37 (expr)


State 72

   34 expr: "dim" T_ID .

    $default  reduce using rule 34 (expr)


State 73

   35 expr: "dim" T_CONST_INT . T_ID

    T_ID  shift, and go to state 131


State 74

   43 expr: "for" T_ID . '=' expr "to" expr "do" expr "done"
   44     | "for" T_ID . '=' expr "downto" expr "do" expr "done"

    '='  shift, and go to state 132


State 75

   40 expr: "if" expr . "then" expr
   41     | "if" expr . "then" expr "else" expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"   shift, and go to state 93
    "then"  shift, and go to state 133
    "&&"    shift, and go to state 94
    "||"    shift, and go to state 95
    "<>"    shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    ":="    shift, and go to state 101
    "+."    shift, and go to state 102
    "-."    shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    "**"    shift, and go to state 106
    ';'     shift, and go to state 107
    '='     shift, and go to state 108
    '>'     shift, and go to state 109
    '<'     shift, and go to state 110
    '+'     shift, and go to state 111
    '-'     shift, and go to state 112
    '*'     shift, and go to state 113
    '/'     shift, and go to state 114


State 76

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr
   72     | "match" expr . "with" clause clause_list "end"

    "mod"   shift, and go to state 93
    "with"  shift, and go to state 134
    "&&"    shift, and go to state 94
    "||"    shift, and go to state 95
    "<>"    shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    ":="    shift, and go to state 101
    "+."    shift, and go to state 102
    "-."    shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    "**"    shift, and go to state 106
    ';'     shift, and go to state 107
    '='     shift, and go to state 108
    '>'     shift, and go to state 109
    '<'     shift, and go to state 110
    '+'     shift, and go to state 111
    '-'     shift, and go to state 112
    '*'     shift, and go to state 113
    '/'     shift, and go to state 114


State 77

   36 expr: "new" type .
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119

    $default  reduce using rule 36 (expr)


State 78

   49 expr: "not" expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    $default  reduce using rule 49 (expr)


State 79

   42 expr: "while" expr . "do" expr "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "do"   shift, and go to state 135
    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114


State 80

   47 expr: "+." expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    $default  reduce using rule 47 (expr)


State 81

   48 expr: "-." expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    $default  reduce using rule 48 (expr)


State 82

   76 func_expr: T_ID .
   84          | T_ID . '[' expr expr_comma_list ']'

    '['  shift, and go to state 84

    $default  reduce using rule 76 (func_expr)


State 83

   77 func_expr: T_CONSTRUCTOR_ID .

    $default  reduce using rule 77 (func_expr)


State 84

   84 func_expr: T_ID '[' . expr expr_comma_list ']'

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 136
    func_expr  go to state 52


State 85

   32 expr: T_ID func_expr . func_expr_list

    $default  reduce using rule 85 (func_expr_list)

    func_expr_list  go to state 137


State 86

   33 expr: T_CONSTRUCTOR_ID func_expr . func_expr_list

    $default  reduce using rule 85 (func_expr_list)

    func_expr_list  go to state 138


State 87

   45 expr: '+' expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    $default  reduce using rule 45 (expr)


State 88

   46 expr: '-' expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    $default  reduce using rule 46 (expr)


State 89

   73 func_expr: '!' func_expr .

    $default  reduce using rule 73 (func_expr)


State 90

   75 func_expr: '(' ')' .

    $default  reduce using rule 75 (func_expr)


State 91

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr
   74 func_expr: '(' expr . ')'

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    ')'    shift, and go to state 139


State 92

   38 expr: letdef "in" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 140
    func_expr  go to state 52


State 93

   71 expr: expr "mod" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 141
    func_expr  go to state 52


State 94

   67 expr: expr "&&" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 142
    func_expr  go to state 52


State 95

   68 expr: expr "||" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 143
    func_expr  go to state 52


State 96

   60 expr: expr "<>" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 144
    func_expr  go to state 52


State 97

   63 expr: expr "<=" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 145
    func_expr  go to state 52


State 98

   64 expr: expr ">=" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 146
    func_expr  go to state 52


State 99

   65 expr: expr "==" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 147
    func_expr  go to state 52


State 100

   66 expr: expr "!=" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 148
    func_expr  go to state 52


State 101

   70 expr: expr ":=" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 149
    func_expr  go to state 52


State 102

   54 expr: expr "+." . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 150
    func_expr  go to state 52


State 103

   55 expr: expr "-." . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 151
    func_expr  go to state 52


State 104

   56 expr: expr "*." . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 152
    func_expr  go to state 52


State 105

   57 expr: expr "/." . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 153
    func_expr  go to state 52


State 106

   58 expr: expr "**" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 154
    func_expr  go to state 52


State 107

   69 expr: expr ';' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 155
    func_expr  go to state 52


State 108

   59 expr: expr '=' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 156
    func_expr  go to state 52


State 109

   62 expr: expr '>' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 157
    func_expr  go to state 52


State 110

   61 expr: expr '<' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 158
    func_expr  go to state 52


State 111

   50 expr: expr '+' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 159
    func_expr  go to state 52


State 112

   51 expr: expr '-' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 160
    func_expr  go to state 52


State 113

   52 expr: expr '*' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 161
    func_expr  go to state 52


State 114

   53 expr: expr '/' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 162
    func_expr  go to state 52


State 115

   97 type: "array" "of" . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 163


State 116

   98 type: "array" '[' . asterisk_list ']' "of" type

    '*'  shift, and go to state 164

    asterisk_list  go to state 165


State 117

   94 type: '(' type . ')'
   95     | type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119
    ')'    shift, and go to state 166


State 118

   96 type: type "ref" .

    $default  reduce using rule 96 (type)


State 119

   95 type: type "->" . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 167


State 120

   10 def: T_ID ':' type '=' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 168
    func_expr  go to state 52


State 121

   28 par: '(' T_ID ':' . type ')'

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 169


State 122

   12 def: T_ID par par_list '=' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 170
    func_expr  go to state 52


State 123

   11 def: T_ID par par_list ':' . type '=' expr

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 171


State 124

   26 par_list: par_list par .

    $default  reduce using rule 26 (par_list)


State 125

    8 def_list: def_list "and" def .

    $default  reduce using rule 8 (def_list)


State 126

   24 constr: T_CONSTRUCTOR_ID "of" . type type_list

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 172


State 127

   20 tdef: T_ID '=' constr constr_list .
   22 constr_list: constr_list . '|' constr

    '|'  shift, and go to state 173

    $default  reduce using rule 20 (tdef)


State 128

   19 tdef_list: tdef_list "and" tdef .

    $default  reduce using rule 19 (tdef_list)


State 129

   15 def: "mutable" T_ID '[' expr expr_comma_list . ']'
   16    | "mutable" T_ID '[' expr expr_comma_list . ']' ':' type
   30 expr_comma_list: expr_comma_list . ',' expr

    ']'  shift, and go to state 174
    ','  shift, and go to state 175


State 130

   39 expr: "begin" expr "end" .

    $default  reduce using rule 39 (expr)


State 131

   35 expr: "dim" T_CONST_INT T_ID .

    $default  reduce using rule 35 (expr)


State 132

   43 expr: "for" T_ID '=' . expr "to" expr "do" expr "done"
   44     | "for" T_ID '=' . expr "downto" expr "do" expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 176
    func_expr  go to state 52


State 133

   40 expr: "if" expr "then" . expr
   41     | "if" expr "then" . expr "else" expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 177
    func_expr  go to state 52


State 134

   72 expr: "match" expr "with" . clause clause_list "end"

    "false"           shift, and go to state 178
    "true"            shift, and go to state 179
    "+."              shift, and go to state 180
    "-."              shift, and go to state 181
    T_ID              shift, and go to state 182
    T_CONSTRUCTOR_ID  shift, and go to state 183
    T_CONST_INT       shift, and go to state 184
    T_CONST_FLOAT     shift, and go to state 185
    '+'               shift, and go to state 186
    '-'               shift, and go to state 187
    '('               shift, and go to state 188

    clause        go to state 189
    pattern       go to state 190
    pattern_high  go to state 191


State 135

   42 expr: "while" expr "do" . expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 192
    func_expr  go to state 52


State 136

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr
   84 func_expr: T_ID '[' expr . expr_comma_list ']'

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 29 (expr_comma_list)

    expr_comma_list  go to state 193


State 137

   32 expr: T_ID func_expr func_expr_list .
   86 func_expr_list: func_expr_list . func_expr

    "false"           shift, and go to state 30
    "true"            shift, and go to state 36
    T_ID              shift, and go to state 82
    T_CONSTRUCTOR_ID  shift, and go to state 83
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    $default  reduce using rule 32 (expr)

    func_expr  go to state 194


State 138

   33 expr: T_CONSTRUCTOR_ID func_expr func_expr_list .
   86 func_expr_list: func_expr_list . func_expr

    "false"           shift, and go to state 30
    "true"            shift, and go to state 36
    T_ID              shift, and go to state 82
    T_CONSTRUCTOR_ID  shift, and go to state 83
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    $default  reduce using rule 33 (expr)

    func_expr  go to state 194


State 139

   74 func_expr: '(' expr ')' .

    $default  reduce using rule 74 (func_expr)


State 140

   38 expr: letdef "in" expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 38 (expr)


State 141

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr
   71     | expr "mod" expr .

    "**"  shift, and go to state 106

    $default  reduce using rule 71 (expr)


State 142

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   67     | expr "&&" expr .
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 67 (expr)


State 143

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   68     | expr "||" expr .
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 68 (expr)


State 144

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   60     | expr "<>" expr .
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 60 (expr)


State 145

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   63     | expr "<=" expr .
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 146

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   64     | expr ">=" expr .
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 147

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   65     | expr "==" expr .
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 65 (expr)


State 148

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   66     | expr "!=" expr .
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 66 (expr)


State 149

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   70     | expr ":=" expr .
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    ":="  error (nonassociative)

    $default  reduce using rule 70 (expr)


State 150

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   54     | expr "+." expr .
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 54 (expr)


State 151

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   55     | expr "-." expr .
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 55 (expr)


State 152

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   56     | expr "*." expr .
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "**"  shift, and go to state 106

    $default  reduce using rule 56 (expr)


State 153

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   57     | expr "/." expr .
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "**"  shift, and go to state 106

    $default  reduce using rule 57 (expr)


State 154

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   58     | expr "**" expr .
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "**"  shift, and go to state 106

    $default  reduce using rule 58 (expr)


State 155

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   69     | expr ';' expr .
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 69 (expr)


State 156

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   59     | expr '=' expr .
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 59 (expr)


State 157

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   62     | expr '>' expr .
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 62 (expr)


State 158

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   61     | expr '<' expr .
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 159

   50 expr: expr . '+' expr
   50     | expr '+' expr .
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 50 (expr)


State 160

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 51 (expr)


State 161

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "**"  shift, and go to state 106

    $default  reduce using rule 52 (expr)


State 162

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   53     | expr '/' expr .
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "**"  shift, and go to state 106

    $default  reduce using rule 53 (expr)


State 163

   95 type: type . "->" type
   96     | type . "ref"
   97     | "array" "of" type .

    $default  reduce using rule 97 (type)


State 164

  100 asterisk_list: '*' .

    $default  reduce using rule 100 (asterisk_list)


State 165

   98 type: "array" '[' asterisk_list . ']' "of" type
  101 asterisk_list: asterisk_list . ',' '*'

    ']'  shift, and go to state 195
    ','  shift, and go to state 196


State 166

   94 type: '(' type ')' .

    $default  reduce using rule 94 (type)


State 167

   95 type: type . "->" type
   95     | type "->" type .
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119

    $default  reduce using rule 95 (type)


State 168

   10 def: T_ID ':' type '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 10 (def)


State 169

   28 par: '(' T_ID ':' type . ')'
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119
    ')'    shift, and go to state 197


State 170

   12 def: T_ID par par_list '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 12 (def)


State 171

   11 def: T_ID par par_list ':' type . '=' expr
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119
    '='    shift, and go to state 198


State 172

   24 constr: T_CONSTRUCTOR_ID "of" type . type_list
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119

    $default  reduce using rule 87 (type_list)

    type_list  go to state 199


State 173

   22 constr_list: constr_list '|' . constr

    T_CONSTRUCTOR_ID  shift, and go to state 65

    constr  go to state 200


State 174

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' .
   16    | "mutable" T_ID '[' expr expr_comma_list ']' . ':' type

    ':'  shift, and go to state 201

    $default  reduce using rule 15 (def)


State 175

   30 expr_comma_list: expr_comma_list ',' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 202
    func_expr  go to state 52


State 176

   43 expr: "for" T_ID '=' expr . "to" expr "do" expr "done"
   44     | "for" T_ID '=' expr . "downto" expr "do" expr "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "downto"  shift, and go to state 203
    "mod"     shift, and go to state 93
    "to"      shift, and go to state 204
    "&&"      shift, and go to state 94
    "||"      shift, and go to state 95
    "<>"      shift, and go to state 96
    "<="      shift, and go to state 97
    ">="      shift, and go to state 98
    "=="      shift, and go to state 99
    "!="      shift, and go to state 100
    ":="      shift, and go to state 101
    "+."      shift, and go to state 102
    "-."      shift, and go to state 103
    "*."      shift, and go to state 104
    "/."      shift, and go to state 105
    "**"      shift, and go to state 106
    ';'       shift, and go to state 107
    '='       shift, and go to state 108
    '>'       shift, and go to state 109
    '<'       shift, and go to state 110
    '+'       shift, and go to state 111
    '-'       shift, and go to state 112
    '*'       shift, and go to state 113
    '/'       shift, and go to state 114


State 177

   40 expr: "if" expr "then" expr .
   41     | "if" expr "then" expr . "else" expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "else"  shift, and go to state 205
    "mod"   shift, and go to state 93
    "&&"    shift, and go to state 94
    "||"    shift, and go to state 95
    "<>"    shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    ":="    shift, and go to state 101
    "+."    shift, and go to state 102
    "-."    shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    "**"    shift, and go to state 106
    '='     shift, and go to state 108
    '>'     shift, and go to state 109
    '<'     shift, and go to state 110
    '+'     shift, and go to state 111
    '-'     shift, and go to state 112
    '*'     shift, and go to state 113
    '/'     shift, and go to state 114

    "else"    [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 178

  116 pattern_high: "false" .

    $default  reduce using rule 116 (pattern_high)


State 179

  115 pattern_high: "true" .

    $default  reduce using rule 115 (pattern_high)


State 180

  112 pattern_high: "+." . T_CONST_FLOAT

    T_CONST_FLOAT  shift, and go to state 206


State 181

  113 pattern_high: "-." . T_CONST_FLOAT

    T_CONST_FLOAT  shift, and go to state 207


State 182

  117 pattern_high: T_ID .

    $default  reduce using rule 117 (pattern_high)


State 183

  106 pattern: T_CONSTRUCTOR_ID . pattern_high_list

    $default  reduce using rule 107 (pattern_high_list)

    pattern_high_list  go to state 208


State 184

  111 pattern_high: T_CONST_INT .

    $default  reduce using rule 111 (pattern_high)


State 185

  114 pattern_high: T_CONST_FLOAT .

    $default  reduce using rule 114 (pattern_high)


State 186

  109 pattern_high: '+' . T_CONST_INT

    T_CONST_INT  shift, and go to state 209


State 187

  110 pattern_high: '-' . T_CONST_INT

    T_CONST_INT  shift, and go to state 210


State 188

  118 pattern_high: '(' . pattern ')'

    "false"           shift, and go to state 178
    "true"            shift, and go to state 179
    "+."              shift, and go to state 180
    "-."              shift, and go to state 181
    T_ID              shift, and go to state 182
    T_CONSTRUCTOR_ID  shift, and go to state 183
    T_CONST_INT       shift, and go to state 184
    T_CONST_FLOAT     shift, and go to state 185
    '+'               shift, and go to state 186
    '-'               shift, and go to state 187
    '('               shift, and go to state 188

    pattern       go to state 211
    pattern_high  go to state 191


State 189

   72 expr: "match" expr "with" clause . clause_list "end"

    $default  reduce using rule 102 (clause_list)

    clause_list  go to state 212


State 190

  104 clause: pattern . "->" expr

    "->"  shift, and go to state 213


State 191

  105 pattern: pattern_high .

    $default  reduce using rule 105 (pattern)


State 192

   42 expr: "while" expr "do" expr . "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "done"  shift, and go to state 214
    "mod"   shift, and go to state 93
    "&&"    shift, and go to state 94
    "||"    shift, and go to state 95
    "<>"    shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    ":="    shift, and go to state 101
    "+."    shift, and go to state 102
    "-."    shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    "**"    shift, and go to state 106
    ';'     shift, and go to state 107
    '='     shift, and go to state 108
    '>'     shift, and go to state 109
    '<'     shift, and go to state 110
    '+'     shift, and go to state 111
    '-'     shift, and go to state 112
    '*'     shift, and go to state 113
    '/'     shift, and go to state 114


State 193

   30 expr_comma_list: expr_comma_list . ',' expr
   84 func_expr: T_ID '[' expr expr_comma_list . ']'

    ']'  shift, and go to state 215
    ','  shift, and go to state 175


State 194

   86 func_expr_list: func_expr_list func_expr .

    $default  reduce using rule 86 (func_expr_list)


State 195

   98 type: "array" '[' asterisk_list ']' . "of" type

    "of"  shift, and go to state 216


State 196

  101 asterisk_list: asterisk_list ',' . '*'

    '*'  shift, and go to state 217


State 197

   28 par: '(' T_ID ':' type ')' .

    $default  reduce using rule 28 (par)


State 198

   11 def: T_ID par par_list ':' type '=' . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 218
    func_expr  go to state 52


State 199

   24 constr: T_CONSTRUCTOR_ID "of" type type_list .
   88 type_list: type_list . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    $default  reduce using rule 24 (constr)

    type  go to state 219


State 200

   22 constr_list: constr_list '|' constr .

    $default  reduce using rule 22 (constr_list)


State 201

   16 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 220


State 202

   30 expr_comma_list: expr_comma_list ',' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 30 (expr_comma_list)


State 203

   44 expr: "for" T_ID '=' expr "downto" . expr "do" expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 221
    func_expr  go to state 52


State 204

   43 expr: "for" T_ID '=' expr "to" . expr "do" expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 222
    func_expr  go to state 52


State 205

   41 expr: "if" expr "then" expr "else" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 223
    func_expr  go to state 52


State 206

  112 pattern_high: "+." T_CONST_FLOAT .

    $default  reduce using rule 112 (pattern_high)


State 207

  113 pattern_high: "-." T_CONST_FLOAT .

    $default  reduce using rule 113 (pattern_high)


State 208

  106 pattern: T_CONSTRUCTOR_ID pattern_high_list .
  108 pattern_high_list: pattern_high_list . pattern_high

    "false"        shift, and go to state 178
    "true"         shift, and go to state 179
    "+."           shift, and go to state 180
    "-."           shift, and go to state 181
    T_ID           shift, and go to state 182
    T_CONST_INT    shift, and go to state 184
    T_CONST_FLOAT  shift, and go to state 185
    '+'            shift, and go to state 186
    '-'            shift, and go to state 187
    '('            shift, and go to state 188

    $default  reduce using rule 106 (pattern)

    pattern_high  go to state 224


State 209

  109 pattern_high: '+' T_CONST_INT .

    $default  reduce using rule 109 (pattern_high)


State 210

  110 pattern_high: '-' T_CONST_INT .

    $default  reduce using rule 110 (pattern_high)


State 211

  118 pattern_high: '(' pattern . ')'

    ')'  shift, and go to state 225


State 212

   72 expr: "match" expr "with" clause clause_list . "end"
  103 clause_list: clause_list . '|' clause

    "end"  shift, and go to state 226
    '|'    shift, and go to state 227


State 213

  104 clause: pattern "->" . expr

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 228
    func_expr  go to state 52


State 214

   42 expr: "while" expr "do" expr "done" .

    $default  reduce using rule 42 (expr)


State 215

   84 func_expr: T_ID '[' expr expr_comma_list ']' .

    $default  reduce using rule 84 (func_expr)


State 216

   98 type: "array" '[' asterisk_list ']' "of" . type

    "array"  shift, and go to state 53
    "bool"   shift, and go to state 54
    "char"   shift, and go to state 55
    "int"    shift, and go to state 56
    "float"  shift, and go to state 57
    "unit"   shift, and go to state 58
    T_ID     shift, and go to state 59
    '('      shift, and go to state 60

    type  go to state 229


State 217

  101 asterisk_list: asterisk_list ',' '*' .

    $default  reduce using rule 101 (asterisk_list)


State 218

   11 def: T_ID par par_list ':' type '=' expr .
   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 11 (def)


State 219

   88 type_list: type_list type .
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119

    $default  reduce using rule 88 (type_list)


State 220

   16 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' type .
   95 type: type . "->" type
   96     | type . "ref"

    "ref"  shift, and go to state 118
    "->"   shift, and go to state 119

    $default  reduce using rule 16 (def)


State 221

   44 expr: "for" T_ID '=' expr "downto" expr . "do" expr "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "do"   shift, and go to state 230
    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114


State 222

   43 expr: "for" T_ID '=' expr "to" expr . "do" expr "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "do"   shift, and go to state 231
    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114


State 223

   41 expr: "if" expr "then" expr "else" expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 41 (expr)


State 224

  108 pattern_high_list: pattern_high_list pattern_high .

    $default  reduce using rule 108 (pattern_high_list)


State 225

  118 pattern_high: '(' pattern ')' .

    $default  reduce using rule 118 (pattern_high)


State 226

   72 expr: "match" expr "with" clause clause_list "end" .

    $default  reduce using rule 72 (expr)


State 227

  103 clause_list: clause_list '|' . clause

    "false"           shift, and go to state 178
    "true"            shift, and go to state 179
    "+."              shift, and go to state 180
    "-."              shift, and go to state 181
    T_ID              shift, and go to state 182
    T_CONSTRUCTOR_ID  shift, and go to state 183
    T_CONST_INT       shift, and go to state 184
    T_CONST_FLOAT     shift, and go to state 185
    '+'               shift, and go to state 186
    '-'               shift, and go to state 187
    '('               shift, and go to state 188

    clause        go to state 232
    pattern       go to state 190
    pattern_high  go to state 191


State 228

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr
  104 clause: pattern "->" expr .

    "mod"  shift, and go to state 93
    "&&"   shift, and go to state 94
    "||"   shift, and go to state 95
    "<>"   shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    ":="   shift, and go to state 101
    "+."   shift, and go to state 102
    "-."   shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    "**"   shift, and go to state 106
    ';'    shift, and go to state 107
    '='    shift, and go to state 108
    '>'    shift, and go to state 109
    '<'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114

    $default  reduce using rule 104 (clause)


State 229

   95 type: type . "->" type
   96     | type . "ref"
   98     | "array" '[' asterisk_list ']' "of" type .

    $default  reduce using rule 98 (type)


State 230

   44 expr: "for" T_ID '=' expr "downto" expr "do" . expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 233
    func_expr  go to state 52


State 231

   43 expr: "for" T_ID '=' expr "to" expr "do" . expr "done"

    "begin"           shift, and go to state 27
    "delete"          shift, and go to state 28
    "dim"             shift, and go to state 29
    "false"           shift, and go to state 30
    "for"             shift, and go to state 31
    "if"              shift, and go to state 32
    "let"             shift, and go to state 4
    "match"           shift, and go to state 33
    "new"             shift, and go to state 34
    "not"             shift, and go to state 35
    "true"            shift, and go to state 36
    "while"           shift, and go to state 37
    "+."              shift, and go to state 38
    "-."              shift, and go to state 39
    T_ID              shift, and go to state 40
    T_CONSTRUCTOR_ID  shift, and go to state 41
    T_CONST_CHAR      shift, and go to state 42
    T_CONST_INT       shift, and go to state 43
    T_CONST_FLOAT     shift, and go to state 44
    T_STRING_LITERAL  shift, and go to state 45
    '+'               shift, and go to state 46
    '-'               shift, and go to state 47
    '!'               shift, and go to state 48
    '('               shift, and go to state 49

    letdef     go to state 50
    expr       go to state 234
    func_expr  go to state 52


State 232

  103 clause_list: clause_list '|' clause .

    $default  reduce using rule 103 (clause_list)


State 233

   44 expr: "for" T_ID '=' expr "downto" expr "do" expr . "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "done"  shift, and go to state 235
    "mod"   shift, and go to state 93
    "&&"    shift, and go to state 94
    "||"    shift, and go to state 95
    "<>"    shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    ":="    shift, and go to state 101
    "+."    shift, and go to state 102
    "-."    shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    "**"    shift, and go to state 106
    ';'     shift, and go to state 107
    '='     shift, and go to state 108
    '>'     shift, and go to state 109
    '<'     shift, and go to state 110
    '+'     shift, and go to state 111
    '-'     shift, and go to state 112
    '*'     shift, and go to state 113
    '/'     shift, and go to state 114


State 234

   43 expr: "for" T_ID '=' expr "to" expr "do" expr . "done"
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . "+." expr
   55     | expr . "-." expr
   56     | expr . "*." expr
   57     | expr . "/." expr
   58     | expr . "**" expr
   59     | expr . '=' expr
   60     | expr . "<>" expr
   61     | expr . '<' expr
   62     | expr . '>' expr
   63     | expr . "<=" expr
   64     | expr . ">=" expr
   65     | expr . "==" expr
   66     | expr . "!=" expr
   67     | expr . "&&" expr
   68     | expr . "||" expr
   69     | expr . ';' expr
   70     | expr . ":=" expr
   71     | expr . "mod" expr

    "done"  shift, and go to state 236
    "mod"   shift, and go to state 93
    "&&"    shift, and go to state 94
    "||"    shift, and go to state 95
    "<>"    shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    ":="    shift, and go to state 101
    "+."    shift, and go to state 102
    "-."    shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    "**"    shift, and go to state 106
    ';'     shift, and go to state 107
    '='     shift, and go to state 108
    '>'     shift, and go to state 109
    '<'     shift, and go to state 110
    '+'     shift, and go to state 111
    '-'     shift, and go to state 112
    '*'     shift, and go to state 113
    '/'     shift, and go to state 114


State 235

   44 expr: "for" T_ID '=' expr "downto" expr "do" expr "done" .

    $default  reduce using rule 44 (expr)


State 236

   43 expr: "for" T_ID '=' expr "to" expr "do" expr "done" .

    $default  reduce using rule 43 (expr)
