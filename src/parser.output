Terminals unused in grammar

    "match"
    "type"
    "with"
    T_CONSTRUCTOR_ID
    "**"


State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: letdef_list

    2 letdef_list: %empty
    3            | letdef_list letdef

    4 letdef: "let" "rec" def def_list
    5       | "let" def def_list

    6 def_list: %empty
    7         | def_list "and" def

    8 def: T_ID '=' expr
    9    | T_ID ':' type '=' expr
   10    | T_ID par par_list ':' type '=' expr
   11    | T_ID par par_list '=' expr
   12    | "mutable" T_ID
   13    | "mutable" T_ID ':' type
   14    | "mutable" T_ID '[' expr expr_comma_list ']'
   15    | "mutable" T_ID '[' expr expr_comma_list ']' ':' type

   16 par_list: %empty
   17         | par_list par

   18 par: T_ID
   19    | '(' T_ID ':' type ')'

   20 expr_comma_list: %empty
   21                | expr_comma_list ',' expr

   22 expr: func_expr
   23     | T_ID func_expr func_expr_list
   24     | "dim" T_ID
   25     | "dim" T_CONST_INT T_ID
   26     | "new" type
   27     | "delete" expr
   28     | letdef "in" expr
   29     | "begin" expr "end"
   30     | "if" expr "then" expr
   31     | "if" expr "then" expr "else" expr
   32     | "while" expr "do" expr "done"
   33     | "for" T_ID '=' expr "to" expr "do" expr "done"
   34     | "for" T_ID '=' expr "downto" expr "do" expr "done"
   35     | '+' expr
   36     | '-' expr
   37     | "not" expr
   38     | expr '+' expr
   39     | expr '-' expr
   40     | expr '*' expr
   41     | expr '/' expr
   42     | expr '=' expr
   43     | expr "<>" expr
   44     | expr '<' expr
   45     | expr '>' expr
   46     | expr "<=" expr
   47     | expr ">=" expr
   48     | expr "==" expr
   49     | expr "!=" expr
   50     | expr "&&" expr
   51     | expr "||" expr
   52     | expr ';' expr
   53     | expr ":=" expr
   54     | expr "mod" expr

   55 func_expr: '!' func_expr
   56          | '(' expr ')'
   57          | '(' ')'
   58          | T_ID
   59          | T_CONST_INT
   60          | T_CONST_CHAR
   61          | T_STRING_LITERAL
   62          | "true"
   63          | "false"
   64          | T_ID '[' expr expr_comma_list ']'

   65 func_expr_list: %empty
   66               | func_expr_list func_expr

   67 type: "unit"
   68     | "int"
   69     | "char"
   70     | "bool"
   71     | '(' type ')'
   72     | type "->" type
   73     | type "ref"
   74     | "array" "of" type
   75     | "array" '[' asterisk_list ']' "of" type

   76 asterisk_list: '*'
   77              | asterisk_list ',' '*'


Terminals, with rules where they appear

    $end (0) 0
    '!' <op> (33) 55
    '(' (40) 19 56 57 71
    ')' (41) 19 56 57 71
    '*' <op> (42) 40 76 77
    '+' <op> (43) 35 38
    ',' (44) 21 77
    '-' <op> (45) 36 39
    '/' <op> (47) 41
    ':' (58) 9 10 13 15 19
    ';' <op> (59) 52
    '<' <op> (60) 44
    '=' <op> (61) 8 9 10 11 33 34 42
    '>' <op> (62) 45
    '[' (91) 14 15 64 75
    ']' (93) 14 15 64 75
    error (256)
    "and" (258) 7
    "array" (259) 74 75
    "begin" (260) 29
    "bool" (261) 70
    "char" (262) 69
    "delete" <op> (263) 27
    "dim" (264) 24 25
    "do" (265) 32 33 34
    "done" (266) 32 33 34
    "downto" (267) 34
    "else" (268) 31
    "end" (269) 29
    "false" (270) 63
    "for" (271) 33 34
    "if" (272) 30 31
    "in" (273) 28
    "int" (274) 68
    "let" (275) 4 5
    "match" (276)
    "mod" <op> (277) 54
    "mutable" (278) 12 13 14 15
    "new" (279) 26
    "not" <op> (280) 37
    "of" (281) 74 75
    "rec" (282) 4
    "ref" (283) 73
    "then" (284) 30 31
    "to" (285) 33
    "true" (286) 62
    "type" (287)
    "unit" (288) 67
    "while" (289) 32
    "with" (290)
    "->" (291) 72
    "&&" <op> (292) 50
    "||" <op> (293) 51
    "<>" <op> (294) 43
    "<=" <op> (295) 46
    ">=" <op> (296) 47
    "==" <op> (297) 48
    "!=" <op> (298) 49
    ":=" <op> (299) 53
    T_ID <id> (300) 8 9 10 11 12 13 14 15 18 19 23 24 25 33 34 58 64
    T_CONSTRUCTOR_ID (301)
    T_CONST_CHAR <const_char> (302) 60
    T_CONST_INT <number> (303) 25 59
    T_STRING_LITERAL <string_literal> (304) 61
    IF_THEN (305)
    IF_THEN_ELSE (306)
    "**" <op> (307)
    UNOP <op> (308)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    program <letdef_list> (70)
        on left: 1
        on right: 0
    letdef_list <letdef_list> (71)
        on left: 2 3
        on right: 1 3
    letdef <let_def> (72)
        on left: 4 5
        on right: 3 28
    def_list <def_list> (73)
        on left: 6 7
        on right: 4 5 7
    def <def> (74)
        on left: 8 9 10 11 12 13 14 15
        on right: 4 5 7
    par_list <par_list> (75)
        on left: 16 17
        on right: 10 11 17
    par <par> (76)
        on left: 18 19
        on right: 10 11 17
    expr_comma_list <expr_comma_list> (77)
        on left: 20 21
        on right: 14 15 21 64
    expr <expr> (78)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 8 9 10 11 14 15 21 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 56 64
    func_expr <expr> (79)
        on left: 55 56 57 58 59 60 61 62 63 64
        on right: 22 23 55 66
    func_expr_list <func_expr_list> (80)
        on left: 65 66
        on right: 23 66
    type <type> (81)
        on left: 67 68 69 70 71 72 73 74 75
        on right: 9 10 13 15 19 26 71 72 73 74 75
    asterisk_list <dimension_count> (82)
        on left: 76 77
        on right: 75 77


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (letdef_list)

    program      go to state 1
    letdef_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: letdef_list •
    3 letdef_list: letdef_list • letdef

    "let"  shift, and go to state 4

    $default  reduce using rule 1 (program)

    letdef  go to state 5


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 letdef: "let" • "rec" def def_list
    5       | "let" • def def_list

    "mutable"  shift, and go to state 6
    "rec"      shift, and go to state 7
    T_ID       shift, and go to state 8

    def  go to state 9


State 5

    3 letdef_list: letdef_list letdef •

    $default  reduce using rule 3 (letdef_list)


State 6

   12 def: "mutable" • T_ID
   13    | "mutable" • T_ID ':' type
   14    | "mutable" • T_ID '[' expr expr_comma_list ']'
   15    | "mutable" • T_ID '[' expr expr_comma_list ']' ':' type

    T_ID  shift, and go to state 10


State 7

    4 letdef: "let" "rec" • def def_list

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 11


State 8

    8 def: T_ID • '=' expr
    9    | T_ID • ':' type '=' expr
   10    | T_ID • par par_list ':' type '=' expr
   11    | T_ID • par par_list '=' expr

    T_ID  shift, and go to state 12
    '='   shift, and go to state 13
    ':'   shift, and go to state 14
    '('   shift, and go to state 15

    par  go to state 16


State 9

    5 letdef: "let" def • def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 17


State 10

   12 def: "mutable" T_ID •
   13    | "mutable" T_ID • ':' type
   14    | "mutable" T_ID • '[' expr expr_comma_list ']'
   15    | "mutable" T_ID • '[' expr expr_comma_list ']' ':' type

    ':'  shift, and go to state 18
    '['  shift, and go to state 19

    $default  reduce using rule 12 (def)


State 11

    4 letdef: "let" "rec" def • def_list

    $default  reduce using rule 6 (def_list)

    def_list  go to state 20


State 12

   18 par: T_ID •

    $default  reduce using rule 18 (par)


State 13

    8 def: T_ID '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 40
    func_expr  go to state 41


State 14

    9 def: T_ID ':' • type '=' expr

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 48


State 15

   19 par: '(' • T_ID ':' type ')'

    T_ID  shift, and go to state 49


State 16

   10 def: T_ID par • par_list ':' type '=' expr
   11    | T_ID par • par_list '=' expr

    $default  reduce using rule 16 (par_list)

    par_list  go to state 50


State 17

    5 letdef: "let" def def_list •
    7 def_list: def_list • "and" def

    "and"  shift, and go to state 51

    $default  reduce using rule 5 (letdef)


State 18

   13 def: "mutable" T_ID ':' • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 52


State 19

   14 def: "mutable" T_ID '[' • expr expr_comma_list ']'
   15    | "mutable" T_ID '[' • expr expr_comma_list ']' ':' type

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 53
    func_expr  go to state 41


State 20

    4 letdef: "let" "rec" def def_list •
    7 def_list: def_list • "and" def

    "and"  shift, and go to state 51

    $default  reduce using rule 4 (letdef)


State 21

   29 expr: "begin" • expr "end"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 54
    func_expr  go to state 41


State 22

   27 expr: "delete" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 55
    func_expr  go to state 41


State 23

   24 expr: "dim" • T_ID
   25     | "dim" • T_CONST_INT T_ID

    T_ID         shift, and go to state 56
    T_CONST_INT  shift, and go to state 57


State 24

   63 func_expr: "false" •

    $default  reduce using rule 63 (func_expr)


State 25

   33 expr: "for" • T_ID '=' expr "to" expr "do" expr "done"
   34     | "for" • T_ID '=' expr "downto" expr "do" expr "done"

    T_ID  shift, and go to state 58


State 26

   30 expr: "if" • expr "then" expr
   31     | "if" • expr "then" expr "else" expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 59
    func_expr  go to state 41


State 27

   26 expr: "new" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 60


State 28

   37 expr: "not" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 61
    func_expr  go to state 41


State 29

   62 func_expr: "true" •

    $default  reduce using rule 62 (func_expr)


State 30

   32 expr: "while" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 62
    func_expr  go to state 41


State 31

   23 expr: T_ID • func_expr func_expr_list
   58 func_expr: T_ID •
   64          | T_ID • '[' expr expr_comma_list ']'

    "false"           shift, and go to state 24
    "true"            shift, and go to state 29
    T_ID              shift, and go to state 63
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '!'               shift, and go to state 37
    '['               shift, and go to state 64
    '('               shift, and go to state 38

    $default  reduce using rule 58 (func_expr)

    func_expr  go to state 65


State 32

   60 func_expr: T_CONST_CHAR •

    $default  reduce using rule 60 (func_expr)


State 33

   59 func_expr: T_CONST_INT •

    $default  reduce using rule 59 (func_expr)


State 34

   61 func_expr: T_STRING_LITERAL •

    $default  reduce using rule 61 (func_expr)


State 35

   35 expr: '+' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 66
    func_expr  go to state 41


State 36

   36 expr: '-' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 67
    func_expr  go to state 41


State 37

   55 func_expr: '!' • func_expr

    "false"           shift, and go to state 24
    "true"            shift, and go to state 29
    T_ID              shift, and go to state 63
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    func_expr  go to state 68


State 38

   56 func_expr: '(' • expr ')'
   57          | '(' • ')'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38
    ')'               shift, and go to state 69

    letdef     go to state 39
    expr       go to state 70
    func_expr  go to state 41


State 39

   28 expr: letdef • "in" expr

    "in"  shift, and go to state 71


State 40

    8 def: T_ID '=' expr •
   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 8 (def)


State 41

   22 expr: func_expr •

    $default  reduce using rule 22 (expr)


State 42

   74 type: "array" • "of" type
   75     | "array" • '[' asterisk_list ']' "of" type

    "of"  shift, and go to state 89
    '['   shift, and go to state 90


State 43

   70 type: "bool" •

    $default  reduce using rule 70 (type)


State 44

   69 type: "char" •

    $default  reduce using rule 69 (type)


State 45

   68 type: "int" •

    $default  reduce using rule 68 (type)


State 46

   67 type: "unit" •

    $default  reduce using rule 67 (type)


State 47

   71 type: '(' • type ')'

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 91


State 48

    9 def: T_ID ':' type • '=' expr
   72 type: type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93
    '='    shift, and go to state 94


State 49

   19 par: '(' T_ID • ':' type ')'

    ':'  shift, and go to state 95


State 50

   10 def: T_ID par par_list • ':' type '=' expr
   11    | T_ID par par_list • '=' expr
   17 par_list: par_list • par

    T_ID  shift, and go to state 12
    '='   shift, and go to state 96
    ':'   shift, and go to state 97
    '('   shift, and go to state 15

    par  go to state 98


State 51

    7 def_list: def_list "and" • def

    "mutable"  shift, and go to state 6
    T_ID       shift, and go to state 8

    def  go to state 99


State 52

   13 def: "mutable" T_ID ':' type •
   72 type: type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93

    $default  reduce using rule 13 (def)


State 53

   14 def: "mutable" T_ID '[' expr • expr_comma_list ']'
   15    | "mutable" T_ID '[' expr • expr_comma_list ']' ':' type
   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 20 (expr_comma_list)

    expr_comma_list  go to state 100


State 54

   29 expr: "begin" expr • "end"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "end"  shift, and go to state 101
    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88


State 55

   27 expr: "delete" expr •
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    $default  reduce using rule 27 (expr)


State 56

   24 expr: "dim" T_ID •

    $default  reduce using rule 24 (expr)


State 57

   25 expr: "dim" T_CONST_INT • T_ID

    T_ID  shift, and go to state 102


State 58

   33 expr: "for" T_ID • '=' expr "to" expr "do" expr "done"
   34     | "for" T_ID • '=' expr "downto" expr "do" expr "done"

    '='  shift, and go to state 103


State 59

   30 expr: "if" expr • "then" expr
   31     | "if" expr • "then" expr "else" expr
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"   shift, and go to state 72
    "then"  shift, and go to state 104
    "&&"    shift, and go to state 73
    "||"    shift, and go to state 74
    "<>"    shift, and go to state 75
    "<="    shift, and go to state 76
    ">="    shift, and go to state 77
    "=="    shift, and go to state 78
    "!="    shift, and go to state 79
    ":="    shift, and go to state 80
    ';'     shift, and go to state 81
    '='     shift, and go to state 82
    '>'     shift, and go to state 83
    '<'     shift, and go to state 84
    '+'     shift, and go to state 85
    '-'     shift, and go to state 86
    '*'     shift, and go to state 87
    '/'     shift, and go to state 88


State 60

   26 expr: "new" type •
   72 type: type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93

    $default  reduce using rule 26 (expr)


State 61

   37 expr: "not" expr •
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    $default  reduce using rule 37 (expr)


State 62

   32 expr: "while" expr • "do" expr "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "do"   shift, and go to state 105
    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88


State 63

   58 func_expr: T_ID •
   64          | T_ID • '[' expr expr_comma_list ']'

    '['  shift, and go to state 64

    $default  reduce using rule 58 (func_expr)


State 64

   64 func_expr: T_ID '[' • expr expr_comma_list ']'

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 106
    func_expr  go to state 41


State 65

   23 expr: T_ID func_expr • func_expr_list

    $default  reduce using rule 65 (func_expr_list)

    func_expr_list  go to state 107


State 66

   35 expr: '+' expr •
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    $default  reduce using rule 35 (expr)


State 67

   36 expr: '-' expr •
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    $default  reduce using rule 36 (expr)


State 68

   55 func_expr: '!' func_expr •

    $default  reduce using rule 55 (func_expr)


State 69

   57 func_expr: '(' ')' •

    $default  reduce using rule 57 (func_expr)


State 70

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr
   56 func_expr: '(' expr • ')'

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    ')'    shift, and go to state 108


State 71

   28 expr: letdef "in" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 109
    func_expr  go to state 41


State 72

   54 expr: expr "mod" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 110
    func_expr  go to state 41


State 73

   50 expr: expr "&&" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 111
    func_expr  go to state 41


State 74

   51 expr: expr "||" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 112
    func_expr  go to state 41


State 75

   43 expr: expr "<>" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 113
    func_expr  go to state 41


State 76

   46 expr: expr "<=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 114
    func_expr  go to state 41


State 77

   47 expr: expr ">=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 115
    func_expr  go to state 41


State 78

   48 expr: expr "==" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 116
    func_expr  go to state 41


State 79

   49 expr: expr "!=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 117
    func_expr  go to state 41


State 80

   53 expr: expr ":=" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 118
    func_expr  go to state 41


State 81

   52 expr: expr ';' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 119
    func_expr  go to state 41


State 82

   42 expr: expr '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 120
    func_expr  go to state 41


State 83

   45 expr: expr '>' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 121
    func_expr  go to state 41


State 84

   44 expr: expr '<' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 122
    func_expr  go to state 41


State 85

   38 expr: expr '+' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 123
    func_expr  go to state 41


State 86

   39 expr: expr '-' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 124
    func_expr  go to state 41


State 87

   40 expr: expr '*' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 125
    func_expr  go to state 41


State 88

   41 expr: expr '/' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 126
    func_expr  go to state 41


State 89

   74 type: "array" "of" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 127


State 90

   75 type: "array" '[' • asterisk_list ']' "of" type

    '*'  shift, and go to state 128

    asterisk_list  go to state 129


State 91

   71 type: '(' type • ')'
   72     | type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93
    ')'    shift, and go to state 130


State 92

   73 type: type "ref" •

    $default  reduce using rule 73 (type)


State 93

   72 type: type "->" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 131


State 94

    9 def: T_ID ':' type '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 132
    func_expr  go to state 41


State 95

   19 par: '(' T_ID ':' • type ')'

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 133


State 96

   11 def: T_ID par par_list '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 134
    func_expr  go to state 41


State 97

   10 def: T_ID par par_list ':' • type '=' expr

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 135


State 98

   17 par_list: par_list par •

    $default  reduce using rule 17 (par_list)


State 99

    7 def_list: def_list "and" def •

    $default  reduce using rule 7 (def_list)


State 100

   14 def: "mutable" T_ID '[' expr expr_comma_list • ']'
   15    | "mutable" T_ID '[' expr expr_comma_list • ']' ':' type
   21 expr_comma_list: expr_comma_list • ',' expr

    ']'  shift, and go to state 136
    ','  shift, and go to state 137


State 101

   29 expr: "begin" expr "end" •

    $default  reduce using rule 29 (expr)


State 102

   25 expr: "dim" T_CONST_INT T_ID •

    $default  reduce using rule 25 (expr)


State 103

   33 expr: "for" T_ID '=' • expr "to" expr "do" expr "done"
   34     | "for" T_ID '=' • expr "downto" expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 138
    func_expr  go to state 41


State 104

   30 expr: "if" expr "then" • expr
   31     | "if" expr "then" • expr "else" expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 139
    func_expr  go to state 41


State 105

   32 expr: "while" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 140
    func_expr  go to state 41


State 106

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr
   64 func_expr: T_ID '[' expr • expr_comma_list ']'

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 20 (expr_comma_list)

    expr_comma_list  go to state 141


State 107

   23 expr: T_ID func_expr func_expr_list •
   66 func_expr_list: func_expr_list • func_expr

    "false"           shift, and go to state 24
    "true"            shift, and go to state 29
    T_ID              shift, and go to state 63
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    $default  reduce using rule 23 (expr)

    func_expr  go to state 142


State 108

   56 func_expr: '(' expr ')' •

    $default  reduce using rule 56 (func_expr)


State 109

   28 expr: letdef "in" expr •
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 28 (expr)


State 110

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr
   54     | expr "mod" expr •

    $default  reduce using rule 54 (expr)


State 111

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   50     | expr "&&" expr •
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 50 (expr)


State 112

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   51     | expr "||" expr •
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 51 (expr)


State 113

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   43     | expr "<>" expr •
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 43 (expr)


State 114

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   46     | expr "<=" expr •
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 46 (expr)


State 115

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   47     | expr ">=" expr •
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 47 (expr)


State 116

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   48     | expr "==" expr •
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 48 (expr)


State 117

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   49     | expr "!=" expr •
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 49 (expr)


State 118

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   53     | expr ":=" expr •
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    ":="  error (nonassociative)

    $default  reduce using rule 53 (expr)


State 119

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   52     | expr ';' expr •
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 52 (expr)


State 120

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   42     | expr '=' expr •
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 42 (expr)


State 121

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   45     | expr '>' expr •
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 45 (expr)


State 122

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   44     | expr '<' expr •
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 44 (expr)


State 123

   38 expr: expr • '+' expr
   38     | expr '+' expr •
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 38 (expr)


State 124

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   39     | expr '-' expr •
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 39 (expr)


State 125

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   40     | expr '*' expr •
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    $default  reduce using rule 40 (expr)


State 126

   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   41     | expr '/' expr •
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    $default  reduce using rule 41 (expr)


State 127

   72 type: type • "->" type
   73     | type • "ref"
   74     | "array" "of" type •

    $default  reduce using rule 74 (type)


State 128

   76 asterisk_list: '*' •

    $default  reduce using rule 76 (asterisk_list)


State 129

   75 type: "array" '[' asterisk_list • ']' "of" type
   77 asterisk_list: asterisk_list • ',' '*'

    ']'  shift, and go to state 143
    ','  shift, and go to state 144


State 130

   71 type: '(' type ')' •

    $default  reduce using rule 71 (type)


State 131

   72 type: type • "->" type
   72     | type "->" type •
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93

    $default  reduce using rule 72 (type)


State 132

    9 def: T_ID ':' type '=' expr •
   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 9 (def)


State 133

   19 par: '(' T_ID ':' type • ')'
   72 type: type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93
    ')'    shift, and go to state 145


State 134

   11 def: T_ID par par_list '=' expr •
   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 11 (def)


State 135

   10 def: T_ID par par_list ':' type • '=' expr
   72 type: type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93
    '='    shift, and go to state 146


State 136

   14 def: "mutable" T_ID '[' expr expr_comma_list ']' •
   15    | "mutable" T_ID '[' expr expr_comma_list ']' • ':' type

    ':'  shift, and go to state 147

    $default  reduce using rule 14 (def)


State 137

   21 expr_comma_list: expr_comma_list ',' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 148
    func_expr  go to state 41


State 138

   33 expr: "for" T_ID '=' expr • "to" expr "do" expr "done"
   34     | "for" T_ID '=' expr • "downto" expr "do" expr "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "downto"  shift, and go to state 149
    "mod"     shift, and go to state 72
    "to"      shift, and go to state 150
    "&&"      shift, and go to state 73
    "||"      shift, and go to state 74
    "<>"      shift, and go to state 75
    "<="      shift, and go to state 76
    ">="      shift, and go to state 77
    "=="      shift, and go to state 78
    "!="      shift, and go to state 79
    ":="      shift, and go to state 80
    ';'       shift, and go to state 81
    '='       shift, and go to state 82
    '>'       shift, and go to state 83
    '<'       shift, and go to state 84
    '+'       shift, and go to state 85
    '-'       shift, and go to state 86
    '*'       shift, and go to state 87
    '/'       shift, and go to state 88


State 139

   30 expr: "if" expr "then" expr •
   31     | "if" expr "then" expr • "else" expr
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "else"  shift, and go to state 151
    "mod"   shift, and go to state 72
    "&&"    shift, and go to state 73
    "||"    shift, and go to state 74
    "<>"    shift, and go to state 75
    "<="    shift, and go to state 76
    ">="    shift, and go to state 77
    "=="    shift, and go to state 78
    "!="    shift, and go to state 79
    ":="    shift, and go to state 80
    '='     shift, and go to state 82
    '>'     shift, and go to state 83
    '<'     shift, and go to state 84
    '+'     shift, and go to state 85
    '-'     shift, and go to state 86
    '*'     shift, and go to state 87
    '/'     shift, and go to state 88

    "else"    [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 140

   32 expr: "while" expr "do" expr • "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "done"  shift, and go to state 152
    "mod"   shift, and go to state 72
    "&&"    shift, and go to state 73
    "||"    shift, and go to state 74
    "<>"    shift, and go to state 75
    "<="    shift, and go to state 76
    ">="    shift, and go to state 77
    "=="    shift, and go to state 78
    "!="    shift, and go to state 79
    ":="    shift, and go to state 80
    ';'     shift, and go to state 81
    '='     shift, and go to state 82
    '>'     shift, and go to state 83
    '<'     shift, and go to state 84
    '+'     shift, and go to state 85
    '-'     shift, and go to state 86
    '*'     shift, and go to state 87
    '/'     shift, and go to state 88


State 141

   21 expr_comma_list: expr_comma_list • ',' expr
   64 func_expr: T_ID '[' expr expr_comma_list • ']'

    ']'  shift, and go to state 153
    ','  shift, and go to state 137


State 142

   66 func_expr_list: func_expr_list func_expr •

    $default  reduce using rule 66 (func_expr_list)


State 143

   75 type: "array" '[' asterisk_list ']' • "of" type

    "of"  shift, and go to state 154


State 144

   77 asterisk_list: asterisk_list ',' • '*'

    '*'  shift, and go to state 155


State 145

   19 par: '(' T_ID ':' type ')' •

    $default  reduce using rule 19 (par)


State 146

   10 def: T_ID par par_list ':' type '=' • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 156
    func_expr  go to state 41


State 147

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 157


State 148

   21 expr_comma_list: expr_comma_list ',' expr •
   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 21 (expr_comma_list)


State 149

   34 expr: "for" T_ID '=' expr "downto" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 158
    func_expr  go to state 41


State 150

   33 expr: "for" T_ID '=' expr "to" • expr "do" expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 159
    func_expr  go to state 41


State 151

   31 expr: "if" expr "then" expr "else" • expr

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 160
    func_expr  go to state 41


State 152

   32 expr: "while" expr "do" expr "done" •

    $default  reduce using rule 32 (expr)


State 153

   64 func_expr: T_ID '[' expr expr_comma_list ']' •

    $default  reduce using rule 64 (func_expr)


State 154

   75 type: "array" '[' asterisk_list ']' "of" • type

    "array"  shift, and go to state 42
    "bool"   shift, and go to state 43
    "char"   shift, and go to state 44
    "int"    shift, and go to state 45
    "unit"   shift, and go to state 46
    '('      shift, and go to state 47

    type  go to state 161


State 155

   77 asterisk_list: asterisk_list ',' '*' •

    $default  reduce using rule 77 (asterisk_list)


State 156

   10 def: T_ID par par_list ':' type '=' expr •
   38 expr: expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 10 (def)


State 157

   15 def: "mutable" T_ID '[' expr expr_comma_list ']' ':' type •
   72 type: type • "->" type
   73     | type • "ref"

    "ref"  shift, and go to state 92
    "->"   shift, and go to state 93

    $default  reduce using rule 15 (def)


State 158

   34 expr: "for" T_ID '=' expr "downto" expr • "do" expr "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "do"   shift, and go to state 162
    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88


State 159

   33 expr: "for" T_ID '=' expr "to" expr • "do" expr "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "do"   shift, and go to state 163
    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    ';'    shift, and go to state 81
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88


State 160

   31 expr: "if" expr "then" expr "else" expr •
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "mod"  shift, and go to state 72
    "&&"   shift, and go to state 73
    "||"   shift, and go to state 74
    "<>"   shift, and go to state 75
    "<="   shift, and go to state 76
    ">="   shift, and go to state 77
    "=="   shift, and go to state 78
    "!="   shift, and go to state 79
    ":="   shift, and go to state 80
    '='    shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88

    $default  reduce using rule 31 (expr)


State 161

   72 type: type • "->" type
   73     | type • "ref"
   75     | "array" '[' asterisk_list ']' "of" type •

    $default  reduce using rule 75 (type)


State 162

   34 expr: "for" T_ID '=' expr "downto" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 164
    func_expr  go to state 41


State 163

   33 expr: "for" T_ID '=' expr "to" expr "do" • expr "done"

    "begin"           shift, and go to state 21
    "delete"          shift, and go to state 22
    "dim"             shift, and go to state 23
    "false"           shift, and go to state 24
    "for"             shift, and go to state 25
    "if"              shift, and go to state 26
    "let"             shift, and go to state 4
    "new"             shift, and go to state 27
    "not"             shift, and go to state 28
    "true"            shift, and go to state 29
    "while"           shift, and go to state 30
    T_ID              shift, and go to state 31
    T_CONST_CHAR      shift, and go to state 32
    T_CONST_INT       shift, and go to state 33
    T_STRING_LITERAL  shift, and go to state 34
    '+'               shift, and go to state 35
    '-'               shift, and go to state 36
    '!'               shift, and go to state 37
    '('               shift, and go to state 38

    letdef     go to state 39
    expr       go to state 165
    func_expr  go to state 41


State 164

   34 expr: "for" T_ID '=' expr "downto" expr "do" expr • "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "done"  shift, and go to state 166
    "mod"   shift, and go to state 72
    "&&"    shift, and go to state 73
    "||"    shift, and go to state 74
    "<>"    shift, and go to state 75
    "<="    shift, and go to state 76
    ">="    shift, and go to state 77
    "=="    shift, and go to state 78
    "!="    shift, and go to state 79
    ":="    shift, and go to state 80
    ';'     shift, and go to state 81
    '='     shift, and go to state 82
    '>'     shift, and go to state 83
    '<'     shift, and go to state 84
    '+'     shift, and go to state 85
    '-'     shift, and go to state 86
    '*'     shift, and go to state 87
    '/'     shift, and go to state 88


State 165

   33 expr: "for" T_ID '=' expr "to" expr "do" expr • "done"
   38     | expr • '+' expr
   39     | expr • '-' expr
   40     | expr • '*' expr
   41     | expr • '/' expr
   42     | expr • '=' expr
   43     | expr • "<>" expr
   44     | expr • '<' expr
   45     | expr • '>' expr
   46     | expr • "<=" expr
   47     | expr • ">=" expr
   48     | expr • "==" expr
   49     | expr • "!=" expr
   50     | expr • "&&" expr
   51     | expr • "||" expr
   52     | expr • ';' expr
   53     | expr • ":=" expr
   54     | expr • "mod" expr

    "done"  shift, and go to state 167
    "mod"   shift, and go to state 72
    "&&"    shift, and go to state 73
    "||"    shift, and go to state 74
    "<>"    shift, and go to state 75
    "<="    shift, and go to state 76
    ">="    shift, and go to state 77
    "=="    shift, and go to state 78
    "!="    shift, and go to state 79
    ":="    shift, and go to state 80
    ';'     shift, and go to state 81
    '='     shift, and go to state 82
    '>'     shift, and go to state 83
    '<'     shift, and go to state 84
    '+'     shift, and go to state 85
    '-'     shift, and go to state 86
    '*'     shift, and go to state 87
    '/'     shift, and go to state 88


State 166

   34 expr: "for" T_ID '=' expr "downto" expr "do" expr "done" •

    $default  reduce using rule 34 (expr)


State 167

   33 expr: "for" T_ID '=' expr "to" expr "do" expr "done" •

    $default  reduce using rule 33 (expr)
